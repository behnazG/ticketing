{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/jquery.md.bootstrap.datetimepicker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","$","toJalaali","gy","gm","gd","jdn","jd","jm","k","d2g","jy","jalCal","jdn1F","g2d","march","div","mod","leap","d2j","toGregorian","j2d","isLeapJalaaliYear","breaks","bl","length","leapJ","jp","jump","Error","j","a","b","mdDatePickerFlagSelector","mdDatePickerGroupIdAttribute","mdDatePickerPopoverSelector","mdDatePickerContainerSelector","mdPluginName","triggerStart","popoverHeaderSelectYearHtmlTemplate","dateTimePickerYearsToSelectHtmlTemplate","dateTimePickerHtmlTemplate","dateTimePickerMonthTableHtmlTemplate","triggerChangeCalling","previousYearTextPersian","previousMonthTextPersian","nextYearTextPersian","nextMonthTextPersian","hourTextPersian","minuteTextPersian","secondTextPersian","goTodayTextPersian","previousYearText","previousMonthText","nextYearText","nextMonthText","goTodayText","hourText","minuteText","secondText","amPm","am","pm","none","shortDayNamesPersian","shortDayNames","monthNamesPersian","monthNames","weekDayNames","weekDayNamesPersian","getPopoverDescriber","$element","$popoverDescriber","parents","attr","getSetting1","data","getSetting2","setPopoverHeaderHtml","htmlString","find","html","setSetting1","setting","setSetting2","updateCalendarHtml1","calendarHtml","getDateTimePickerHtml","$container","inLine","text","trim","getSelectedDateTimeTextFormatted","undefined","selectedDate","rangeSelector","rangeSelectorStartDate","rangeSelectorEndDate","getDateTimeString","isGregorian","getDateTimeJson1","getDateTimeJsonPersian1","textFormat","englishNumber","getSelectedDateTimeFormatted","dateFormat","setSelectedData","$targetText","targetTextSelector","tagName","toLowerCase","val","trigger","$targetDate","targetDateSelector","isNumber","isNaN","parseFloat","isFinite","toPersianNumber","inputNumber1","str1","toString","replace","toEnglishNumber","inputNumber2","str","getMonthName","monthIndex","addMonthToDateTimeJson","dateTimeJson","addedMonth","dateTimeJson1","extend","day","month","getDateTime3","year","addMonthToDateTime","dateTime","getDateTime2","getWeekDayName","englishWeekDayIndex","getWeekDayShortName","getAmPm","hour","hidePopover","popover","convertToNumber1","Number","zeroPad","convertToNumber2","convertToNumber3","getDateTime1","yearPersian","monthPersian","dayPersian","minute","second","gregorian","Date","dateTimeJsonPersian","getDateTime4","dateNumber","Math","floor","getDateTimeJson2","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","dayOfWeek","getDay","persianDate","getDaysInMonthPersian","numberOfDaysInMonth","persianYear","isLeapYear","getDaysInMonth","getClonedDate","getTime","nr","base","len","String","Array","join","format","getShortHour","millisecond","getLastDayDateOfPreviousMonth","dateTimeLocal","previousMonth","daysInMonth","getFirstDayDateOfNextMonth","nextMonth","parseDateTime","gregorianDateTimeString","setHours","setMinutes","setSeconds","setMilliseconds","parseGregorianDateTime","persianDateTimeInString","dateSeperatorPattern","RegExp","miliSecond","amPmEnum","containMonthSeperator","test","indexOf","AM","PM","match","minuteAndSecondAndMiliSecondMatch","monthDayMath","persianMonthName","dayMatch","yearMatch","numericYear","numericMonth","numericDay","numericHour","numericMinute","numericSecond","persianDateTime","None","parsePersianDateTime","getYearsToSelectHtml","yearToStart","disableBeforeDateTimeJson","disableAfterDateTimeJson","selectedDateToShow","yearsToSelectHtml","todayDateTimeJson","selectedDateTimeToShowJson","counter","disableBeforeDate","disableAfterDate","fromDate","toDate","groupId","$toDateElement","$fromDateElement","toDateSelectedDate","fromDateSelectedDate","yearStart","yearOffset","yearEnd","disableBeforeToday","disableAfterToday","currentYearDateTimeNumber","currentYearDisabledAttr","yearText","yearDateNumber","enableTimePicker","selectedDateString","todayDateString","rangeSelectorStartDateJson","rangeSelectorEndDateJson","selectedDateTimeJson","monthsTdHtml","numberOfNextMonths","monthsToShow","numberOfPrevMonths","i1","getDateTimePickerMonthHtml1","i2","totalMonthNumberToShow","abs","monthTdStyle","isNextMonth","isPrevMonth","selectedDateToShowTemp","selectedDateTime","isNextOrPrevMonth","firstWeekDayNumber","selectedYear","selectedMonthName","todayDateNumber","numberOfDaysInCurrentMonth","disableBeforeDateTimeNumber","disableAfterDateTimeNumber","cellNumber","tdNumber","selectedDateNumber","dateTimeToShowJson","$tr","$td","daysHtml","currentDateNumber","currentMonthInfo","previousMonthDateNumber","nextMonthDateNumber","previousYearDateNumber","nextYearDateNumber","rangeSelectorStartDateNumber","rangeSelectorEndDateNumber","dayNumberInString","monthsDateNumberAndAttr","month1DateNumber","month2DateNumber","month3DateNumber","month4DateNumber","month5DateNumber","month6DateNumber","month7DateNumber","month8DateNumber","month9DateNumber","month10DateNumber","month11DateNumber","month12DateNumber","selectMonth1ButtonCssClass","selectMonth2ButtonCssClass","selectMonth3ButtonCssClass","selectMonth4ButtonCssClass","selectMonth5ButtonCssClass","selectMonth6ButtonCssClass","selectMonth7ButtonCssClass","selectMonth8ButtonCssClass","selectMonth9ButtonCssClass","selectMonth10ButtonCssClass","selectMonth11ButtonCssClass","selectMonth12ButtonCssClass","holiDaysDateNumbers","disabledDatesNumber","previousYearButtonDisabledAttribute","previousMonthButtonDisabledAttribute","selectYearButtonDisabledAttribute","nextMonthButtonDisabledAttribute","nextYearButtonDisabledAttribute","numberOfDaysInPreviousMonth","setFullYear","setMonth","holiDays","push","disabledDates","getDateTimeJsonPersian2","previousMonthDateTimeJson","addClass","append","outerHTML","isTrAppended","nextMonthDateTimeJson","document","on","$this","this","disabled","selectedDateJson","removeClass","$allTdDays","filter","$thisContainer","$hour","$minute","$second","yearsToSelectObject","yearsRangeText","popoverHeaderHtml","dateTimePickerYearsToSelectHtml","isNext","e","target","methods","init","options","each","placement","targetValue","parse","textValue","disable","container","content","title","template","sanitize","$exceptThis","$thisPopover","is","hideOthers","showPopover","setTimeout","value1","dateValues","split","MdPersianDateTimePicker","getText","getDateRange","fromDateSetting","toDateSetting","setDate","dateTimeObject","setOption","setDateRange","startDateTimeObject","endDateTimeObject","clearDate","setDatePersian","dateTimeObjectJson","hide","show","isDisable","removeAttr","changeType","fn","method","apply","slice","arguments","error","jQuery"],"mappings":"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","file":"jquery.md.bootstrap.datetimepicker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","﻿/*\r\n * Bootstrap 4+ Persian Date Time Picker jQuery Plugin\r\n * version : 3.4.0\r\n * https://github.com/Mds92/MD.BootstrapPersianDateTimePicker\r\n *\r\n *\r\n * Written By Mohammad Dayyan, Mordad 1397\r\n * mds.soft@gmail.com - @mdssoft\r\n *\r\n * My weblog: mds-soft.persianblog.ir\r\n */\r\n\r\n\r\n(function ($) {\r\n\r\n    // #region jalali calendar\r\n\r\n    function toJalaali(gy, gm, gd) {\r\n        return d2j(g2d(gy, gm, gd));\r\n    }\r\n\r\n    function toGregorian(jy, jm, jd) {\r\n        return d2g(j2d(jy, jm, jd));\r\n    }\r\n\r\n    function isValidJalaaliDate(jy, jm, jd) {\r\n        return jy >= -61 && jy <= 3177 &&\r\n            jm >= 1 && jm <= 12 &&\r\n            jd >= 1 && jd <= jalaaliMonthLength(jy, jm);\r\n    }\r\n\r\n    function isLeapJalaaliYear(jy) {\r\n        return jalCal(jy).leap === 0;\r\n    }\r\n\r\n    function jalaaliMonthLength(jy, jm) {\r\n        if (jm <= 6) return 31;\r\n        if (jm <= 11) return 30;\r\n        if (isLeapJalaaliYear(jy)) return 30;\r\n        return 29;\r\n    }\r\n\r\n    function jalCal(jy) {\r\n        // Jalaali years starting the 33-year rule.\r\n        var breaks = [-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178],\r\n            bl = breaks.length,\r\n            gy = jy + 621,\r\n            leapJ = -14,\r\n            jp = breaks[0],\r\n            jm,\r\n            jump = 1,\r\n            leap,\r\n            n,\r\n            i;\r\n\r\n        if (jy < jp || jy >= breaks[bl - 1])\r\n            throw new Error('Invalid Jalaali year ' + jy);\r\n\r\n        // Find the limiting years for the Jalaali year jy.\r\n        for (i = 1; i < bl; i += 1) {\r\n            jm = breaks[i];\r\n            jump = jm - jp;\r\n            if (jy < jm)\r\n                break;\r\n            leapJ = leapJ + div(jump, 33) * 8 + div(mod(jump, 33), 4);\r\n            jp = jm;\r\n        }\r\n        n = jy - jp;\r\n\r\n        // Find the number of leap years from AD 621 to the beginning\r\n        // of the current Jalaali year in the Persian calendar.\r\n        leapJ = leapJ + div(n, 33) * 8 + div(mod(n, 33) + 3, 4);\r\n        if (mod(jump, 33) === 4 && jump - n === 4)\r\n            leapJ += 1;\r\n\r\n        // And the same in the Gregorian calendar (until the year gy).\r\n        var leapG = div(gy, 4) - div((div(gy, 100) + 1) * 3, 4) - 150;\r\n\r\n        // Determine the Gregorian date of Farvardin the 1st.\r\n        var march = 20 + leapJ - leapG;\r\n\r\n        // Find how many years have passed since the last leap year.\r\n        if (jump - n < 6)\r\n            n = n - jump + div(jump + 4, 33) * 33;\r\n        leap = mod(mod(n + 1, 33) - 1, 4);\r\n        if (leap === -1) leap = 4;\r\n\r\n        return {\r\n            leap: leap,\r\n            gy: gy,\r\n            march: march\r\n        };\r\n    }\r\n\r\n    function j2d(jy, jm, jd) {\r\n        var r = jalCal(jy);\r\n        return g2d(r.gy, 3, r.march) + (jm - 1) * 31 - div(jm, 7) * (jm - 7) + jd - 1;\r\n    }\r\n\r\n    function d2j(jdn) {\r\n        var gy = d2g(jdn).gy, // Calculate Gregorian year (gy).\r\n            jy = gy - 621,\r\n            r = jalCal(jy),\r\n            jdn1F = g2d(gy, 3, r.march),\r\n            jd,\r\n            jm,\r\n            k;\r\n\r\n        // Find number of days that passed since 1 Farvardin.\r\n        k = jdn - jdn1F;\r\n        if (k >= 0) {\r\n            if (k <= 185) {\r\n                // The first 6 months.\r\n                jm = 1 + div(k, 31);\r\n                jd = mod(k, 31) + 1;\r\n                return {\r\n                    jy: jy,\r\n                    jm: jm,\r\n                    jd: jd\r\n                };\r\n            } else {\r\n                // The remaining months.\r\n                k -= 186;\r\n            }\r\n        } else {\r\n            // Previous Jalaali year.\r\n            jy -= 1;\r\n            k += 179;\r\n            if (r.leap === 1)\r\n                k += 1;\r\n        }\r\n        jm = 7 + div(k, 30);\r\n        jd = mod(k, 30) + 1;\r\n        return {\r\n            jy: jy,\r\n            jm: jm,\r\n            jd: jd\r\n        };\r\n    }\r\n\r\n    function g2d(gy, gm, gd) {\r\n        var d = div((gy + div(gm - 8, 6) + 100100) * 1461, 4) +\r\n            div(153 * mod(gm + 9, 12) + 2, 5) +\r\n            gd - 34840408;\r\n        d = d - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752;\r\n        return d;\r\n    }\r\n\r\n    function d2g(jdn) {\r\n        var j;\r\n        j = 4 * jdn + 139361631;\r\n        j = j + div(div(4 * jdn + 183187720, 146097) * 3, 4) * 4 - 3908;\r\n        var i = div(mod(j, 1461), 4) * 5 + 308;\r\n        var gd = div(mod(i, 153), 5) + 1;\r\n        var gm = mod(div(i, 153), 12) + 1;\r\n        var gy = div(j, 1461) - 100100 + div(8 - gm, 6);\r\n        return {\r\n            gy: gy,\r\n            gm: gm,\r\n            gd: gd\r\n        };\r\n    }\r\n\r\n    function div(a, b) {\r\n        return ~~(a / b);\r\n    }\r\n\r\n    function mod(a, b) {\r\n        return a - ~~(a / b) * b;\r\n    }\r\n\r\n    //#endregion jalali calendar\r\n\r\n    // #region variables\r\n\r\n    var mdDatePickerFlag = 'data-mdpersiandatetimepicker',\r\n        mdDatePickerFlagSelector = '[' + mdDatePickerFlag + ']',\r\n        mdDatePickerGroupIdAttribute = 'data-mdpersiandatetimepicker-group',\r\n        mdDatePickerPopoverFlag = 'data-mdpersiandatetimepicker-popover',\r\n        mdDatePickerPopoverSelector = '[' + mdDatePickerPopoverFlag + ']',\r\n        mdDatePickerContainerFlag = 'data-mdpersiandatetimepicker-container',\r\n        mdDatePickerContainerSelector = '[' + mdDatePickerContainerFlag + ']',\r\n        mdPluginName = 'MdPersianDateTimePicker',\r\n        triggerStart = false;\r\n\r\n    var popverHtmlTemplate = `\r\n<div class=\"popover mds-bootstrap-persian-datetime-picker-popover\" role=\"tooltip\" ${mdDatePickerPopoverFlag}>    \r\n    <div class=\"arrow\"></div>    \r\n    <h3 class=\"popover-header text-center\" data-name=\"mds-datetimepicker-title\"></h3>    \r\n    <div class=\"popover-body p-0\" data-name=\"mds-datetimepicker-popoverbody\"></div>\r\n</div>\r\n    `;\r\n\r\n    var popoverHeaderSelectYearHtmlTemplate = `\r\n<table class=\"table table-sm table-borderless text-center p-0 m-0 {{rtlCssClass}}\">\r\n    <tr>\r\n        <th>            \r\n            <a href=\"javascript:void(0)\" title=\"{{previousText}}\" data-year=\"{{latestPreviousYear}}\" data-yearrangebuttonchange=\"-1\"> &lt; </a>\r\n        </th>\r\n        <th>\r\n            {{yearsRangeText}}\r\n        </th>\r\n        <th>            \r\n            <a href=\"javascript:void(0)\" title=\"{{nextText}}\" data-year=\"{{latestNextYear}}\" data-yearrangebuttonchange=\"1\"> &gt; </a>\r\n        </th>\r\n    </tr>       \r\n</table>\r\n    `;\r\n\r\n    var dateTimePickerYearsToSelectHtmlTemplate = `\r\n<table class=\"table table-sm text-center p-0 m-0\">\r\n    <tbody>\r\n        {{yearsToSelectHtml}}\r\n    </tbody>            \r\n</table>\r\n    `;\r\n\r\n    var dateTimePickerHtmlTemplate = `\r\n<div class=\"mds-bootstrap-persian-datetime-picker-container {{rtlCssClass}}\" ${mdDatePickerContainerFlag}>\r\n\r\n    <div class=\"select-year-box w-0\" data-name=\"dateTimePickerYearsToSelectContainer\">        \r\n    </div>\r\n\r\n    <table class=\"table table-sm text-center p-0 m-0\">\r\n        <thead>\r\n            <tr {{selectedDateStringAttribute}}>\r\n                <th colspan=\"100\" data-selecteddatestring>{{selectedDateString}}</th>\r\n            </tr>            \r\n        </thead>\r\n        <tbody>\r\n            <tr>\r\n                {{monthsTdHtml}}\r\n            </tr>\r\n        </tbody>\r\n        <tfoot>\r\n            <tr {{timePickerAttribute}}>\r\n                <td colspan=\"100\" class=\"border-0\">\r\n                    <table class=\"table table-sm table-borderless\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <input type=\"text\" title=\"{{hourText}}\" value=\"{{hour}}\" maxlength=\"2\" data-clock=\"hour\" />\r\n                                </td>\r\n                                <td>:</td>\r\n                                <td>\r\n                                    <input type=\"text\" title=\"{{minuteText}}\" value=\"{{minute}}\" maxlength=\"2\" data-clock=\"minute\" />\r\n                                </td>\r\n                                <td>:</td>\r\n                                <td>\r\n                                    <input type=\"text\" title=\"{{secondText}}\" value=\"{{second}}\" maxlength=\"2\" data-clock=\"second\" />\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td colspan=\"100\">\r\n                    <button type=\"button\" class=\"btn btn-light\" title=\"{{goTodayText}}\" data-go-today>{{todayDateString}}</button>\r\n                </td>\r\n            </tr>\r\n        </tfoot>\r\n    </table>\r\n</div>`;\r\n\r\n    var dateTimePickerMonthTableHtmlTemplate = `\r\n<td class=\"border-0\" style=\"{{monthTdStyle}}\" {{monthTdAttribute}} data-td-month>\r\n\t<table class=\"table table-sm table-striped table-borderless\">\r\n\t\t<thead>\r\n\t\t\t<tr {{monthNameAttribute}}>\r\n\t\t\t\t<th colspan=\"100\" class=\"border-0\">\r\n\t\t\t\t\t<table class=\"table table-sm table-borderless\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-light\"> {{currentMonthInfo}} </button>\r\n\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</th>\r\n\t\t\t</tr>\r\n\t\t\t<tr {{theadSelectDateButtonTrAttribute}}>\r\n                <td colspan=\"100\" class=\"border-0\">\r\n                    <table class=\"table table-sm table-borderless\">\r\n                        <tr>\r\n                            <th>\r\n                                <button type=\"button\" class=\"btn btn-light btn-sm\" title=\"{{previousYearText}}\" data-changedatebutton data-number=\"{{previousYearButtonDateNumber}}\" {{previousYearButtonDisabledAttribute}}> &lt;&lt; </button>\r\n                            </th>\r\n                            <th>\r\n                                <button type=\"button\" class=\"btn btn-light btn-sm\" title=\"{{previousMonthText}}\" data-changedatebutton data-number=\"{{previousMonthButtonDateNumber}}\" {{previousMonthButtonDisabledAttribute}}> &lt; </button>\r\n                            </th>\r\n                            <th style=\"width: 120px;\">\r\n                                <div class=\"dropdown\">\r\n                                    <button type=\"button\" class=\"btn btn-light btn-sm dropdown-toggle\" id=\"mdsBootstrapPersianDatetimePickerMonthSelectorButon\"\r\n                                        data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                        {{selectedMonthName}}\r\n                                    </button>\r\n                                    <div class=\"dropdown-menu\" aria-labelledby=\"mdsBootstrapPersianDatetimePickerMonthSelectorButon\">\r\n                                        <a class=\"dropdown-item {{selectMonth1ButtonCssClass}}\" data-changedatebutton data-number=\"{{dropDownMenuMonth1DateNumber}}\">{{monthName1}}</a>\r\n                                        <a class=\"dropdown-item {{selectMonth2ButtonCssClass}}\" data-changedatebutton data-number=\"{{dropDownMenuMonth2DateNumber}}\">{{monthName2}}</a>\r\n                                        <a class=\"dropdown-item {{selectMonth3ButtonCssClass}}\" data-changedatebutton data-number=\"{{dropDownMenuMonth3DateNumber}}\">{{monthName3}}</a>\r\n                                        <div class=\"dropdown-divider\"></div>\r\n                                        <a class=\"dropdown-item {{selectMonth4ButtonCssClass}}\" data-changedatebutton data-number=\"{{dropDownMenuMonth4DateNumber}}\">{{monthName4}}</a>\r\n                                        <a class=\"dropdown-item {{selectMonth5ButtonCssClass}}\" data-changedatebutton data-number=\"{{dropDownMenuMonth5DateNumber}}\">{{monthName5}}</a>\r\n                                        <a class=\"dropdown-item {{selectMonth6ButtonCssClass}}\" data-changedatebutton data-number=\"{{dropDownMenuMonth6DateNumber}}\">{{monthName6}}</a>\r\n                                        <div class=\"dropdown-divider\"></div>\r\n                                        <a class=\"dropdown-item {{selectMonth7ButtonCssClass}}\" data-changedatebutton data-number=\"{{dropDownMenuMonth7DateNumber}}\">{{monthName7}}</a>\r\n                                        <a class=\"dropdown-item {{selectMonth8ButtonCssClass}}\" data-changedatebutton data-number=\"{{dropDownMenuMonth8DateNumber}}\">{{monthName8}}</a>\r\n                                        <a class=\"dropdown-item {{selectMonth9ButtonCssClass}}\" data-changedatebutton data-number=\"{{dropDownMenuMonth9DateNumber}}\">{{monthName9}}</a>\r\n                                        <div class=\"dropdown-divider\"></div>\r\n                                        <a class=\"dropdown-item {{selectMonth10ButtonCssClass}}\" data-changedatebutton data-number=\"{{dropDownMenuMonth10DateNumber}}\">{{monthName10}}</a>\r\n                                        <a class=\"dropdown-item {{selectMonth11ButtonCssClass}}\" data-changedatebutton data-number=\"{{dropDownMenuMonth11DateNumber}}\">{{monthName11}}</a>\r\n                                        <a class=\"dropdown-item {{selectMonth12ButtonCssClass}}\" data-changedatebutton data-number=\"{{dropDownMenuMonth12DateNumber}}\">{{monthName12}}</a>\r\n                                    </div>\r\n                                </div>\r\n                            </th>\r\n                            <th style=\"width: 50px;\">\r\n                                <button type=\"button\" class=\"btn btn-light btn-sm\" select-year-button {{selectYearButtonDisabledAttribute}}>{{selectedYear}}</button>\r\n                            </th>\r\n                            <th>\r\n                                <button type=\"button\" class=\"btn btn-light btn-sm\" title=\"{{nextMonthText}}\" data-changedatebutton data-number=\"{{nextMonthButtonDateNumber}}\" {{nextMonthButtonDisabledAttribute}}> &gt; </button>\r\n                            </th>\r\n                            <th>\r\n                                <button type=\"button\" class=\"btn btn-light btn-sm\" title=\"{{nextYearText}}\" data-changedatebutton data-number=\"{{nextYearButtonDateNumber}}\" {{nextYearButtonDisabledAttribute}}> &gt;&gt; </button>\r\n                            </th>\r\n                        </tr>\r\n                    </table>\r\n                </td>\r\n\t\t\t</tr>\r\n\t\t</thead>\r\n\t\t<tbody class=\"days\">\r\n            <tr>\r\n                <td class=\"{{weekDayShortName1CssClass}}\">{{weekDayShortName1}}</td>\r\n                <td>{{weekDayShortName2}}</td>\r\n                <td>{{weekDayShortName3}}</td>\r\n                <td>{{weekDayShortName4}}</td>\r\n                <td>{{weekDayShortName5}}</td>\r\n                <td>{{weekDayShortName6}}</td>\r\n                <td class=\"{{weekDayShortName7CssClass}}\">{{weekDayShortName7}}</td>\r\n            </tr>\r\n        {{daysHtml}}\r\n\t\t</tbody>\r\n\t</table>\r\n</td>\r\n    `;\r\n\r\n    triggerChangeCalling = false;\r\n    var previousYearTextPersian = 'سال قبل',\r\n        previousMonthTextPersian = 'ماه قبل',\r\n        previousTextPersian = 'قبلی',\r\n        nextYearTextPersian = 'سال بعد',\r\n        nextMonthTextPersian = 'ماه بعد',\r\n        nextTextPersian = 'بعدی',\r\n        hourTextPersian = 'ساعت',\r\n        minuteTextPersian = 'دقیقه',\r\n        secondTextPersian = 'ثانیه',\r\n        goTodayTextPersian = 'برو به امروز',\r\n        previousText = 'Previous',\r\n        previousYearText = 'Previous Year',\r\n        previousMonthText = 'Previous Month',\r\n        nextText = 'Next',\r\n        nextYearText = 'Next Year',\r\n        nextMonthText = 'Next Month',\r\n        goTodayText = 'Go Today',\r\n        hourText = 'Hour',\r\n        minuteText = 'Minute',\r\n        secondText = 'Second',\r\n        amPm = {\r\n            am: 0,\r\n            pm: 1,\r\n            none: 2\r\n        },\r\n        shortDayNamesPersian = [\r\n            'ش',\r\n            'ی',\r\n            'د',\r\n            'س',\r\n            'چ',\r\n            'پ',\r\n            'ج',\r\n        ],\r\n        shortDayNames = [\r\n            'SU',\r\n            'MO',\r\n            'TU',\r\n            'WE',\r\n            'TH',\r\n            'FR',\r\n            'SA',\r\n        ],\r\n        monthNamesPersian = [\r\n            'فروردین',\r\n            'اردیبهشت',\r\n            'خرداد',\r\n            'تیر',\r\n            'مرداد',\r\n            'شهریور',\r\n            'مهر',\r\n            'آبان',\r\n            'آذر',\r\n            'دی',\r\n            'بهمن',\r\n            'اسفند'\r\n        ],\r\n        monthNames = [\r\n            'January',\r\n            'February',\r\n            'March',\r\n            'April',\r\n            'May',\r\n            'June',\r\n            'July',\r\n            'August',\r\n            'September',\r\n            'October',\r\n            'November',\r\n            'December'\r\n        ],\r\n        weekDayNames = [\r\n            'Sunday',\r\n            'Monday',\r\n            'Tuesday',\r\n            'Wednesday',\r\n            'Thursday',\r\n            'Friday',\r\n            'Saturday'\r\n        ],\r\n        weekDayNamesPersian = [\r\n            'یک شنبه',\r\n            'دوشنبه',\r\n            'سه شنبه',\r\n            'چهارشنبه',\r\n            'پنج شنبه',\r\n            'جمعه',\r\n            'شنبه'\r\n        ];\r\n\r\n    //#endregion\r\n\r\n    // #region Functions\r\n\r\n    function getPopoverDescriber($element) {\r\n        // المانی را بر میگرداند که کاربر پلاگین را روی آن فعال کرده است\r\n        var $popoverDescriber = $element.parents(mdDatePickerFlagSelector + ':first'); // inline\r\n        // not inline\r\n        if ($popoverDescriber.length <= 0) {\r\n            $popoverDescriber = $element.parents(mdDatePickerPopoverSelector + ':first');\r\n            $popoverDescriber = $('[aria-describedby=\"' + $popoverDescriber.attr('id') + '\"]');\r\n        }\r\n        return $popoverDescriber;\r\n    }   \r\n\r\n    function getSetting1($element) {\r\n        return getPopoverDescriber($element).data(mdPluginName);\r\n    }\r\n\r\n    function getSetting2($popoverDescriber) {\r\n        return $popoverDescriber.data(mdPluginName);\r\n    }\r\n\r\n    function setPopoverHeaderHtml(htmlString) {\r\n        $(mdDatePickerPopoverSelector).find('[data-name=\"mds-datetimepicker-title\"]').html(htmlString);        \r\n    }\r\n\r\n    function setSetting1($element, setting) {\r\n        return getPopoverDescriber($element).data(mdPluginName, setting);\r\n    }\r\n\r\n    function setSetting2($popoverDescriber, setting) {\r\n        return $popoverDescriber.data(mdPluginName, setting);\r\n    }\r\n\r\n    function updateCalendarHtml1($element, setting) {\r\n        var calendarHtml = getDateTimePickerHtml(setting),\r\n            $container = setting.inLine ? $element.parents(mdDatePickerFlagSelector + ':first') : $element.parents('[data-name=\"mds-datetimepicker-popoverbody\"]:first');\r\n        setPopoverHeaderHtml($(calendarHtml).find('[data-selecteddatestring]').text().trim());\r\n        $container.html(calendarHtml);\r\n    }\r\n\r\n    function getSelectedDateTimeTextFormatted(setting) {\r\n        if (setting.selectedDate == undefined) return '';\r\n        if (setting.rangeSelector && setting.rangeSelectorStartDate != undefined && setting.rangeSelectorEndDate != undefined)\r\n            return getDateTimeString(!setting.isGregorian ? getDateTimeJsonPersian1(setting.rangeSelectorStartDate) : getDateTimeJson1(setting.rangeSelectorStartDate), setting.textFormat, setting.isGregorian, setting.englishNumber) + ' - ' +\r\n                getDateTimeString(!setting.isGregorian ? getDateTimeJsonPersian1(setting.rangeSelectorEndDate) : getDateTimeJson1(setting.rangeSelectorEndDate), setting.textFormat, setting.isGregorian, setting.englishNumber);\r\n        return getDateTimeString(!setting.isGregorian ? getDateTimeJsonPersian1(setting.selectedDate) : getDateTimeJson1(setting.selectedDate), setting.textFormat, setting.isGregorian, setting.englishNumber);\r\n    }\r\n\r\n    function getSelectedDateTimeFormatted(setting) {\r\n        if (setting.selectedDate == undefined) return '';\r\n        if (setting.rangeSelector && setting.rangeSelectorStartDate != undefined && setting.rangeSelectorEndDate != undefined)\r\n            return getDateTimeString(getDateTimeJson1(setting.rangeSelectorStartDate), setting.dateFormat, setting.isGregorian, true) + ' - ' +\r\n                getDateTimeString(getDateTimeJson1(setting.rangeSelectorEndDate), setting.dateFormat, setting.isGregorian, true);\r\n        return getDateTimeString(getDateTimeJson1(setting.selectedDate), setting.dateFormat, setting.isGregorian, true);\r\n    }\r\n\r\n    function setSelectedData(setting) {\r\n        var $targetText = $(setting.targetTextSelector);\r\n        if ($targetText.length > 0) {\r\n            switch ($targetText[0].tagName.toLowerCase()) {\r\n                case 'input':\r\n                    $targetText.val(getSelectedDateTimeTextFormatted(setting));\r\n                    triggerChangeCalling = true;\r\n                    $targetText.trigger('change');\r\n                    break;\r\n                default:\r\n                    $targetText.text(getSelectedDateTimeTextFormatted(setting));\r\n                    triggerChangeCalling = true;\r\n                    $targetText.trigger('change');\r\n                    break;\r\n            }\r\n        }\r\n        var $targetDate = $(setting.targetDateSelector);\r\n        if ($targetDate.length > 0) {\r\n            switch ($targetDate[0].tagName.toLowerCase()) {\r\n                case 'input':\r\n                    $targetDate.val(getSelectedDateTimeFormatted(setting));\r\n                    triggerChangeCalling = true;\r\n                    $targetDate.trigger('change');\r\n                    break;\r\n                default:\r\n                    $targetDate.text(getSelectedDateTimeFormatted(setting));\r\n                    triggerChangeCalling = true;\r\n                    $targetDate.trigger('change');\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    function isNumber(n) {\r\n        return !isNaN(parseFloat(n)) && isFinite(n);\r\n    }\r\n\r\n    function toPersianNumber(inputNumber1) {\r\n        /* ۰ ۱ ۲ ۳ ۴ ۵ ۶ ۷ ۸ ۹ */\r\n        if (!inputNumber1) return '';\r\n        var str1 = inputNumber1.toString().trim();\r\n        if (!str1) return '';\r\n        str1 = str1.replace(/0/img, '۰');\r\n        str1 = str1.replace(/1/img, '۱');\r\n        str1 = str1.replace(/2/img, '۲');\r\n        str1 = str1.replace(/3/img, '۳');\r\n        str1 = str1.replace(/4/img, '۴');\r\n        str1 = str1.replace(/5/img, '۵');\r\n        str1 = str1.replace(/6/img, '۶');\r\n        str1 = str1.replace(/7/img, '۷');\r\n        str1 = str1.replace(/8/img, '۸');\r\n        str1 = str1.replace(/9/img, '۹');\r\n        return str1;\r\n    }\r\n\r\n    function toEnglishNumber(inputNumber2) {\r\n        if (!inputNumber2) return '';\r\n        var str = inputNumber2.toString().trim();\r\n        if (!str) return '';\r\n        str = str.replace(/۰/img, '0');\r\n        str = str.replace(/۱/img, '1');\r\n        str = str.replace(/۲/img, '2');\r\n        str = str.replace(/۳/img, '3');\r\n        str = str.replace(/۴/img, '4');\r\n        str = str.replace(/۵/img, '5');\r\n        str = str.replace(/۶/img, '6');\r\n        str = str.replace(/۷/img, '7');\r\n        str = str.replace(/۸/img, '8');\r\n        str = str.replace(/۹/img, '9');\r\n        return str;\r\n    }\r\n\r\n    function getMonthName(monthIndex, isGregorian) {\r\n        if (!isGregorian) return monthNamesPersian[monthIndex];\r\n        return monthNames[monthIndex];\r\n    }\r\n\r\n    function addMonthToDateTimeJson(dateTimeJson, addedMonth, isGregorian) {\r\n        // وقتی نیاز هست تا ماه یا روز به تاریخی اضافه کنم\r\n        // پس از اضافه کردن ماه یا روز این متد را استفاده میکنم تا سال و ماه\r\n        // با مقادیر جدید تصحیح و برگشت داده شوند\r\n        var dateTimeJson1 = $.extend({}, dateTimeJson);\r\n        dateTimeJson1.day = 1;\r\n        dateTimeJson1.month += addedMonth;\r\n        if (!isGregorian) {\r\n            if (dateTimeJson1.month <= 0) {\r\n                dateTimeJson1.month = 12;\r\n                dateTimeJson1.year--;\r\n            }\r\n            if (dateTimeJson1.month > 12) {\r\n                dateTimeJson1.year++;\r\n                dateTimeJson1.month = 1;\r\n            }\r\n            return dateTimeJson1;\r\n        }\r\n        return getDateTimeJson1(getDateTime3(dateTimeJson1));\r\n    }\r\n\r\n    function addMonthToDateTime(dateTime, addedMonth, isGregorian) {\r\n        var dateTimeJson = {};\r\n        if (!isGregorian) {\r\n            dateTimeJson = getDateTimeJsonPersian1(dateTime);\r\n            dateTimeJson = addMonthToDateTimeJson(dateTimeJson, addedMonth, isGregorian);\r\n            return getDateTime2(dateTimeJson);\r\n        }\r\n        dateTimeJson = getDateTimeJson1(dateTime);\r\n        dateTimeJson = addMonthToDateTimeJson(dateTimeJson, addedMonth, isGregorian);\r\n        return getDateTime3(dateTimeJson);\r\n    }\r\n\r\n    function getWeekDayName(englishWeekDayIndex, isGregorian) {\r\n        if (!isGregorian) return weekDayNamesPersian[englishWeekDayIndex];\r\n        return weekDayNames[englishWeekDayIndex];\r\n    }\r\n\r\n    function getWeekDayShortName(englishWeekDayIndex, isGregorian) {\r\n        if (!isGregorian) return shortDayNamesPersian[englishWeekDayIndex];\r\n        return shortDayNames[englishWeekDayIndex];\r\n    }\r\n\r\n    function getShortHour(hour) {\r\n        var shortHour;\r\n        if (hour > 12)\r\n            shortHour = hour - 12;\r\n        else\r\n            shortHour = hour;\r\n        return shortHour;\r\n    }\r\n\r\n    function getAmPm(hour, isGregorian) {\r\n        var amPm;\r\n        if (hour > 12) {\r\n            if (isGregorian)\r\n                amPm = 'PM';\r\n            else\r\n                amPm = 'ب.ظ';\r\n        } else\r\n        if (isGregorian)\r\n            amPm = 'AM';\r\n        else\r\n            amPm = 'ق.ظ';\r\n        return amPm;\r\n    }\r\n\r\n    function hideOthers($exceptThis) {\r\n        $(mdDatePickerPopoverSelector).each(function () {\r\n            var $thisPopover = $(this);\r\n            if (!$exceptThis && $exceptThis.is($thisPopover)) return;\r\n            hidePopover($thisPopover);\r\n        });\r\n    }\r\n\r\n    function showPopover($element) {\r\n        if (!$element) return;\r\n        $element.popover('show');\r\n    }\r\n\r\n    function hidePopover($element) {\r\n        if (!$element) return;\r\n        $element.popover('hide');\r\n    }\r\n\r\n    function convertToNumber1(dateTimeJson) {\r\n        return Number(zeroPad(dateTimeJson.year) + zeroPad(dateTimeJson.month) + zeroPad(dateTimeJson.day));\r\n    }\r\n\r\n    function convertToNumber2(year, month, day) {\r\n        return Number(zeroPad(year) + zeroPad(month) + zeroPad(day));\r\n    }\r\n\r\n    function convertToNumber3(dateTime) {\r\n        return convertToNumber1(getDateTimeJson1(dateTime));\r\n    }\r\n\r\n    function getDateTime1(yearPersian, monthPersian, dayPersian, hour, minute, second) {\r\n        if (!isNumber(hour)) hour = 0;\r\n        if (!isNumber(minute)) minute = 0;\r\n        if (!isNumber(second)) second = 0;\r\n        var gregorian = toGregorian(yearPersian, monthPersian, dayPersian);\r\n        return new Date(gregorian.gy, gregorian.gm - 1, gregorian.gd, hour, minute, second);\r\n    }\r\n\r\n    function getDateTime2(dateTimeJsonPersian) {\r\n        if (!dateTimeJsonPersian.hour) dateTimeJsonPersian.hour = 0;\r\n        if (!dateTimeJsonPersian.minute) dateTimeJsonPersian.minute = 0;\r\n        if (!dateTimeJsonPersian.second) dateTimeJsonPersian.second = 0;\r\n        var gregorian = toGregorian(dateTimeJsonPersian.year, dateTimeJsonPersian.month, dateTimeJsonPersian.day);\r\n        return new Date(gregorian.gy, gregorian.gm - 1, gregorian.gd, dateTimeJsonPersian.hour, dateTimeJsonPersian.minute, dateTimeJsonPersian.second);\r\n    }\r\n\r\n    function getDateTime3(dateTimeJson) {\r\n        return new Date(dateTimeJson.year, dateTimeJson.month - 1, dateTimeJson.day, dateTimeJson.hour, dateTimeJson.minute, dateTimeJson.second);\r\n    }\r\n\r\n    function getDateTime4(dateNumber, dateTime, setting) {\r\n        var dateTimeJson = getDateTimeJson2(dateNumber);\r\n        if (!setting.isGregorian) {\r\n            var dateTimeJsonPersian = getDateTimeJsonPersian1(dateTime);\r\n            dateTimeJsonPersian.year = dateTimeJson.year;\r\n            dateTimeJsonPersian.month = dateTimeJson.month;\r\n            dateTimeJsonPersian.day = dateTimeJson.day;\r\n            dateTime = getDateTime2(dateTimeJsonPersian);\r\n        } else\r\n            dateTime = new Date(dateTimeJson.year, dateTimeJson.month - 1, dateTimeJson.day);\r\n        return dateTime;\r\n    }\r\n\r\n    function getDateTimeJson1(dateTime) {\r\n        return {\r\n            year: dateTime.getFullYear(),\r\n            month: dateTime.getMonth() + 1,\r\n            day: dateTime.getDate(),\r\n            hour: dateTime.getHours(),\r\n            minute: dateTime.getMinutes(),\r\n            second: dateTime.getSeconds(),\r\n            dayOfWeek: dateTime.getDay()\r\n        };\r\n    }\r\n\r\n    function getDateTimeJson2(dateNumber) {\r\n        return {\r\n            year: Math.floor(dateNumber / 10000),\r\n            month: Math.floor(dateNumber / 100) % 100,\r\n            day: dateNumber % 100,\r\n            hour: 0,\r\n            minute: 0,\r\n            second: 0\r\n        };\r\n    }\r\n\r\n    function getDateTimeJsonPersian1(dateTime) {\r\n        var persianDate = toJalaali(dateTime.getFullYear(), dateTime.getMonth() + 1, dateTime.getDate());\r\n        return {\r\n            year: persianDate.jy,\r\n            month: persianDate.jm,\r\n            day: persianDate.jd,\r\n            hour: dateTime.getHours(),\r\n            minute: dateTime.getMinutes(),\r\n            second: dateTime.getSeconds(),\r\n            dayOfWeek: dateTime.getDay(),\r\n        };\r\n    }\r\n\r\n    function getDateTimeJsonPersian2(yearPersian, monthPersian, dayPersian, hour, minute, second) {\r\n        if (!isNumber(hour)) hour = 0;\r\n        if (!isNumber(minute)) minute = 0;\r\n        if (!isNumber(second)) second = 0;\r\n        var gregorian = toGregorian(yearPersian, monthPersian, dayPersian);\r\n        return getDateTimeJsonPersian1(new Date(gregorian.gy, gregorian.gm - 1, gregorian.gd, hour, minute, second));\r\n    }\r\n\r\n    function isLeapYear(persianYear) {\r\n        return isLeapJalaaliYear(persianYear);\r\n    }\r\n\r\n    function getDaysInMonthPersian(year, month) {\r\n        var numberOfDaysInMonth = 31;\r\n        if (month > 6 && month < 12)\r\n            numberOfDaysInMonth = 30;\r\n        else if (month == 12)\r\n            numberOfDaysInMonth = isLeapYear(year) ? 30 : 29;\r\n        return numberOfDaysInMonth;\r\n    }\r\n\r\n    function getDaysInMonth(year, month) {\r\n        return new Date(year, month + 1, 0).getDate();\r\n    }\r\n\r\n    function getClonedDate(dateTime) {\r\n        return new Date(dateTime.getTime());\r\n    }\r\n\r\n    function zeroPad(nr, base) {\r\n        if (nr == undefined || nr == '') return '00';\r\n        if (base == undefined || base == '') base = '00';\r\n        var len = (String(base).length - String(nr).length) + 1;\r\n        return len > 0 ? new Array(len).join('0') + nr : nr;\r\n    }\r\n\r\n    function getDateTimeString(dateTimeJson, format, isGregorian, englishNumber) {\r\n\r\n        if (isGregorian) englishNumber = true;\r\n\r\n        /// فرمت های که پشتیبانی می شوند\r\n        /// <para />\r\n        /// yyyy: سال چهار رقمی\r\n        /// <para />\r\n        /// yy: سال دو رقمی\r\n        /// <para />\r\n        /// MMMM: نام فارسی ماه\r\n        /// <para />\r\n        /// MM: عدد دو رقمی ماه\r\n        /// <para />\r\n        /// M: عدد یک رقمی ماه\r\n        /// <para />\r\n        /// dddd: نام فارسی روز هفته\r\n        /// <para />\r\n        /// dd: عدد دو رقمی روز ماه\r\n        /// <para />\r\n        /// d: عدد یک رقمی روز ماه\r\n        /// <para />\r\n        /// HH: ساعت دو رقمی با فرمت 00 تا 24\r\n        /// <para />\r\n        /// H: ساعت یک رقمی با فرمت 0 تا 24\r\n        /// <para />\r\n        /// hh: ساعت دو رقمی با فرمت 00 تا 12\r\n        /// <para />\r\n        /// h: ساعت یک رقمی با فرمت 0 تا 12\r\n        /// <para />\r\n        /// mm: عدد دو رقمی دقیقه\r\n        /// <para />\r\n        /// m: عدد یک رقمی دقیقه\r\n        /// <para />\r\n        /// ss: ثانیه دو رقمی\r\n        /// <para />\r\n        /// s: ثانیه یک رقمی\r\n        /// <para />\r\n        /// fff: میلی ثانیه 3 رقمی\r\n        /// <para />\r\n        /// ff: میلی ثانیه 2 رقمی\r\n        /// <para />\r\n        /// f: میلی ثانیه یک رقمی\r\n        /// <para />\r\n        /// tt: ب.ظ یا ق.ظ\r\n        /// <para />\r\n        /// t: حرف اول از ب.ظ یا ق.ظ\r\n\r\n        format = format.replace(/yyyy/mg, dateTimeJson.year);\r\n        format = format.replace(/yy/mg, dateTimeJson.year % 100);\r\n        format = format.replace(/MMMM/mg, getMonthName(dateTimeJson.month, isGregorian));\r\n        format = format.replace(/MM/mg, zeroPad(dateTimeJson.month));\r\n        format = format.replace(/M/mg, dateTimeJson.month);\r\n        format = format.replace(/dddd/mg, getWeekDayName(dateTimeJson.day, isGregorian));\r\n        format = format.replace(/dd/mg, zeroPad(dateTimeJson.day));\r\n        format = format.replace(/d/mg, dateTimeJson.day);\r\n        format = format.replace(/HH/mg, zeroPad(dateTimeJson.hour));\r\n        format = format.replace(/H/mg, dateTimeJson.hour);\r\n        format = format.replace(/hh/mg, zeroPad(getShortHour(dateTimeJson.hour)));\r\n        format = format.replace(/h/mg, zeroPad(dateTimeJson.hour));\r\n        format = format.replace(/mm/mg, zeroPad(dateTimeJson.minute));\r\n        format = format.replace(/m/mg, dateTimeJson.minute);\r\n        format = format.replace(/ss/mg, zeroPad(dateTimeJson.second));\r\n        format = format.replace(/s/mg, dateTimeJson.second);\r\n        format = format.replace(/fff/mg, zeroPad(dateTimeJson.millisecond, '000'));\r\n        format = format.replace(/ff/mg, zeroPad(dateTimeJson.millisecond / 10));\r\n        format = format.replace(/f/mg, dateTimeJson.millisecond / 100);\r\n        format = format.replace(/tt/mg, getAmPm(dateTimeJson.hour, isGregorian));\r\n        format = format.replace(/t/mg, getAmPm(dateTimeJson.hour, isGregorian)[0]);\r\n\r\n        if (!englishNumber) format = toPersianNumber(format);\r\n        return format;\r\n    }\r\n\r\n    function getLastDayDateOfPreviousMonth(dateTime, isGregorian) {\r\n        var dateTimeLocal = getClonedDate(dateTime);\r\n        if (isGregorian) {\r\n            var previousMonth = new Date(dateTimeLocal.getFullYear(), dateTimeLocal.getMonth() - 1, 1),\r\n                daysInMonth = getDaysInMonth(previousMonth.getFullYear(), previousMonth.getMonth());\r\n            return new Date(previousMonth.getFullYear(), previousMonth.getMonth(), daysInMonth);\r\n        }\r\n        var dateTimeJsonPersian = getDateTimeJsonPersian1(dateTimeLocal);\r\n        dateTimeJsonPersian.month += -1;\r\n        if (dateTimeJsonPersian.month <= 0) {\r\n            dateTimeJsonPersian.month = 12;\r\n            dateTimeJsonPersian.year--;\r\n        } else if (dateTimeJsonPersian.month > 12) {\r\n            dateTimeJsonPersian.year++;\r\n            dateTimeJsonPersian.month = 1;\r\n        }\r\n        return getDateTime1(dateTimeJsonPersian.year, dateTimeJsonPersian.month, getDaysInMonthPersian(dateTimeJsonPersian.year, dateTimeJsonPersian.month));\r\n    }\r\n\r\n    function getFirstDayDateOfNextMonth(dateTime, isGregorian) {\r\n        var dateTimeLocal = getClonedDate(dateTime);\r\n        if (isGregorian) {\r\n            var nextMonth = new Date(dateTimeLocal.getFullYear(), dateTimeLocal.getMonth() + 1, 1);\r\n            return new Date(nextMonth.getFullYear(), nextMonth.getMonth(), 1);\r\n        }\r\n        var dateTimeJsonPersian = getDateTimeJsonPersian1(dateTimeLocal);\r\n        dateTimeJsonPersian.month += 1;\r\n        if (dateTimeJsonPersian.month <= 0) {\r\n            dateTimeJsonPersian.month = 12;\r\n            dateTimeJsonPersian.year--;\r\n        }\r\n        if (dateTimeJsonPersian.month > 12) {\r\n            dateTimeJsonPersian.year++;\r\n            dateTimeJsonPersian.month = 1;\r\n        }\r\n        return getDateTime1(dateTimeJsonPersian.year, dateTimeJsonPersian.month, 1);\r\n    }\r\n\r\n    function parsePersianDateTime(persianDateTimeInString, dateSeperatorPattern) {\r\n        if (!dateSeperatorPattern) dateSeperatorPattern = \"\\/|-\";\r\n        dateSeperatorPattern = new RegExp(dateSeperatorPattern, 'img');\r\n        persianDateTimeInString = toEnglishNumber(persianDateTimeInString);\r\n\r\n        var month = 0,\r\n            year = 0,\r\n            day = 0,\r\n            hour = 0,\r\n            minute = 0,\r\n            second = 0,\r\n            miliSecond = 0,\r\n            amPmEnum = amPm.none,\r\n            containMonthSeperator = dateSeperatorPattern.test(persianDateTimeInString);\r\n\r\n        persianDateTimeInString = persianDateTimeInString.replace(/&nbsp;/img, ' ');\r\n        persianDateTimeInString = persianDateTimeInString.replace(/\\s+/img, '-');\r\n        persianDateTimeInString = persianDateTimeInString.replace(/\\\\/img, '-');\r\n        persianDateTimeInString = persianDateTimeInString.replace(/ك/img, 'ک');\r\n        persianDateTimeInString = persianDateTimeInString.replace(/ي/img, 'ی');\r\n        persianDateTimeInString = persianDateTimeInString.replace(dateSeperatorPattern, '-');\r\n        persianDateTimeInString = '-' + persianDateTimeInString + '-';\r\n\r\n        // بدست آوردن ب.ظ یا ق.ظ\r\n        if (persianDateTimeInString.indexOf('ق.ظ') > -1)\r\n            amPmEnum = amPmEnum.AM;\r\n        else if (persianDateTimeInString.indexOf('ب.ظ') > -1)\r\n            amPmEnum = amPmEnum.PM;\r\n\r\n        if (persianDateTimeInString.indexOf(':') > -1) // رشته ورودی شامل ساعت نیز هست\r\n        {\r\n            persianDateTimeInString = persianDateTimeInString.replace(/-*:-*/img, ':');\r\n            hour = (persianDateTimeInString.match(/-\\d{1,2}(?=:)/img)[0]).replace(/\\D+/, '');\r\n            var minuteAndSecondAndMiliSecondMatch = persianDateTimeInString.match(/:\\d{1,2}(?=:?)/img);\r\n            minute = minuteAndSecondAndMiliSecondMatch[0].replace(/\\D+/, '');\r\n            if (minuteAndSecondAndMiliSecondMatch[1] != undefined)\r\n                second = minuteAndSecondAndMiliSecondMatch[1].replace(/\\D+/, '');\r\n            if (minuteAndSecondAndMiliSecondMatch[2] != undefined)\r\n                miliSecond = minuteAndSecondAndMiliSecondMatch[2].replace(/\\D+/, '');\r\n        }\r\n\r\n        if (containMonthSeperator) {\r\n            var monthDayMath = persianDateTimeInString.match(/-\\d{1,2}(?=-\\d{1,2}[^:]|-)/img);\r\n\r\n            // بدست آوردن ماه\r\n            month = monthDayMath[0].replace(/\\D+/, '');\r\n\r\n            // بدست آوردن روز\r\n            day = monthDayMath[1].replace(/\\D+/, '');\r\n\r\n            // بدست آوردن سال\r\n            year = (persianDateTimeInString.match(/-\\d{2,4}(?=-\\d{1,2}[^:])/img)[0]).replace(/\\D+/, '');\r\n        } else {\r\n            for (var i = 1; i < 12; i++) {\r\n                var persianMonthName = getMonthName(i - 1, false);\r\n                if (persianDateTimeInString.indexOf(persianMonthName) > -1) continue;\r\n                month = i;\r\n                break;\r\n            }\r\n\r\n            // بدست آوردن روز\r\n            var dayMatch = persianDateTimeInString.match(/-\\d{1,2}(?=-)/img);\r\n            if (dayMatch != null) {\r\n                day = dayMatch[0].replace(/\\D+/, '');\r\n                persianDateTimeInString = persianDateTimeInString.replace(new RegExp('-' + day + '(?=-)', 'img'), '-');\r\n            }\r\n\r\n            // بدست آوردن سال\r\n            var yearMatch = persianDateTimeInString.match(/-\\d{4}(?=-)/img);\r\n            if (yearMatch != null)\r\n                year = yearMatch[0].replace(/\\D+/, '');\r\n            else {\r\n                yearMatch = persianDateTimeInString.match(/-\\d{2,4}(?=-)/img);\r\n                if (yearMatch != null)\r\n                    year = yearMatch[0].replace(/\\D+/, '');\r\n            }\r\n        }\r\n\r\n        var numericYear = Number(year);\r\n        var numericMonth = Number(month);\r\n        var numericDay = Number(day);\r\n        var numericHour = Number(hour);\r\n        var numericMinute = Number(minute);\r\n        var numericSecond = Number(second);\r\n        var numericMiliSecond = Number(miliSecond);\r\n\r\n        if (numericYear <= 0)\r\n            numericYear = persianDateTime[0];\r\n\r\n        if (numericMonth <= 0)\r\n            numericMonth = persianDateTime[1];\r\n\r\n        if (numericDay <= 0)\r\n            numericDay = persianDateTime[2];\r\n\r\n        switch (amPmEnum) {\r\n            case amPmEnum.PM:\r\n                if (numericHour < 12)\r\n                    numericHour = numericHour + 12;\r\n                break;\r\n            case amPmEnum.AM:\r\n            case amPmEnum.None:\r\n                break;\r\n        }\r\n\r\n        return getDateTime1(numericYear, numericMonth, numericDay, numericHour, numericMinute, numericSecond, numericMiliSecond);\r\n    }\r\n\r\n    function parseGregorianDateTime(gregorianDateTimeString) {\r\n        //بدست آوردن تاریخ قبلی که در تکست باکس وجود داشته\r\n        gregorianDateTimeString = toEnglishNumber(gregorianDateTimeString);\r\n        if (!gregorianDateTimeString) {\r\n            var dateTime = new Date();\r\n            dateTime.setHours(0);\r\n            dateTime.setMinutes(0);\r\n            dateTime.setSeconds(0);\r\n            dateTime.setMilliseconds(0);\r\n            return dateTime;\r\n        }\r\n        return new Date(gregorianDateTimeString);\r\n    }\r\n\r\n    function parseDateTime(value, setting) {\r\n        if (!value) return undefined;\r\n        if (setting.isGregorian) return parseGregorianDateTime(value);\r\n        return parsePersianDateTime(value);\r\n    }\r\n\r\n    // Get Html of calendar\r\n\r\n    function getYearsToSelectHtml(setting, yearToStart) {\r\n        // بدست آوردن HTML انتخاب سال\r\n        // yearToStart سال شروع\r\n\r\n        var selectedDateToShow = getClonedDate(setting.selectedDateToShow),\r\n            html = dateTimePickerYearsToSelectHtmlTemplate;\r\n\r\n        var yearsToSelectHtml = '',\r\n            selectedDateString = '',\r\n            todayDateString = '',\r\n            todayDateTimeJson = {}, // year, month, day, hour, minute, second\r\n            rangeSelectorStartDate = !setting.rangeSelector || !setting.rangeSelectorStartDate ? undefined : getClonedDate(setting.rangeSelectorStartDate),\r\n            rangeSelectorEndDate = !setting.rangeSelector || !setting.rangeSelectorEndDate ? undefined : getClonedDate(setting.rangeSelectorEndDate),\r\n            selectedDateTimeToShowJson = {},\r\n            disableBeforeDateTimeJson,\r\n            disableAfterDateTimeJson,\r\n            counter = 1;\r\n\r\n        if (setting.isGregorian) {\r\n            selectedDateTimeToShowJson = getDateTimeJson1(selectedDateToShow);\r\n            todayDateTimeJson = getDateTimeJson1(new Date());\r\n            disableBeforeDateTimeJson = !setting.disableBeforeDate ? undefined : getDateTimeJson1(setting.disableBeforeDate);\r\n            disableAfterDateTimeJson = !setting.disableAfterDate ? undefined : getDateTimeJson1(setting.disableAfterDate);\r\n        } else {\r\n            selectedDateTimeToShowJson = getDateTimeJsonPersian1(selectedDateToShow);\r\n            todayDateTimeJson = getDateTimeJsonPersian1(new Date());\r\n            disableBeforeDateTimeJson = !setting.disableBeforeDate ? undefined : getDateTimeJsonPersian1(setting.disableBeforeDate);\r\n            disableAfterDateTimeJson = !setting.disableAfterDate ? undefined : getDateTimeJsonPersian1(setting.disableAfterDate);\r\n        }\r\n\r\n        // بررسی پراپرتی های از تاریخ، تا تاریخ\r\n        if ((setting.fromDate || setting.toDate) && setting.groupId) {\r\n            var $toDateElement = $('[' + mdDatePickerGroupIdAttribute + '=\"' + setting.groupId + '\"][data-toDate]'),\r\n                $fromDateElement = $('[' + mdDatePickerGroupIdAttribute + '=\"' + setting.groupId + '\"][data-fromDate]');\r\n            if (setting.fromDate) {\r\n                var toDateSetting = getSetting2($toDateElement),\r\n                    toDateSelectedDate = toDateSetting.selectedDate;\r\n                disableAfterDateTimeJson = !toDateSelectedDate ? undefined : setting.isGregorian ? getDateTimeJson1(toDateSelectedDate) : getDateTimeJsonPersian1(toDateSelectedDate);\r\n            } else if (setting.toDate) {\r\n                var fromDateSetting = getSetting2($fromDateElement),\r\n                    fromDateSelectedDate = fromDateSetting.selectedDate;\r\n                disableBeforeDateTimeJson = !fromDateSelectedDate ? undefined : setting.isGregorian ? getDateTimeJson1(fromDateSelectedDate) : getDateTimeJsonPersian1(fromDateSelectedDate);\r\n            }\r\n        }\r\n        counter = 1;\r\n        var yearStart = yearToStart ? yearToStart : todayDateTimeJson.year - setting.yearOffset;\r\n        var yearEnd = yearToStart ? yearToStart + setting.yearOffset * 2 : todayDateTimeJson.year + setting.yearOffset;\r\n        for (var i = yearStart; i < yearEnd; i++) {\r\n            if (setting.disableBeforeToday && i < todayDateTimeJson.year) continue;\r\n            if (setting.disableAfterToday && i > todayDateTimeJson.year) continue;\r\n            if (disableBeforeDateTimeJson != undefined && disableBeforeDateTimeJson.year != undefined && i < disableBeforeDateTimeJson.year) continue;\r\n            if (disableAfterDateTimeJson != undefined && disableAfterDateTimeJson.year != undefined && i > disableAfterDateTimeJson.year) continue;\r\n            var currentYearDateTimeNumber = convertToNumber2(i, selectedDateTimeToShowJson.month, getDaysInMonthPersian(i, selectedDateTimeToShowJson.month)),\r\n                currentYearDisabledAttr = '',\r\n                yearText = setting.englishNumber ? i.toString() : toPersianNumber(i),\r\n                yearDateNumber = convertToNumber2(i, selectedDateTimeToShowJson.month, 1);\r\n            if (disableBeforeDateTimeJson != undefined && disableBeforeDateTimeJson.year != undefined && currentYearDateTimeNumber < convertToNumber1(disableBeforeDateTimeJson))\r\n                currentYearDisabledAttr = 'disabled';\r\n            if (disableAfterDateTimeJson != undefined && disableAfterDateTimeJson.year != undefined && currentYearDateTimeNumber < convertToNumber1(disableAfterDateTimeJson))\r\n                currentYearDisabledAttr = 'disabled';\r\n            if (setting.disableBeforeToday && currentYearDateTimeNumber < convertToNumber1(todayDateTimeJson))\r\n                currentYearDisabledAttr = 'disabled';\r\n            if (setting.disableAfterToday && currentYearDateTimeNumber > convertToNumber1(todayDateTimeJson))\r\n                currentYearDisabledAttr = 'disabled';\r\n            if (counter == 1) yearsToSelectHtml += '<tr>';\r\n            yearsToSelectHtml += `\r\n<td class=\"text-center\" ${selectedDateTimeToShowJson.year == i ? 'selected-year' : ''}>\r\n    <button class=\"btn btn-sm btn-light\" type=\"button\" data-changedatebutton data-number=\"${yearDateNumber}\" ${currentYearDisabledAttr}>${yearText}</button>        \r\n</td>\r\n`;\r\n            if (counter == 5) yearsToSelectHtml += '</tr>';\r\n            counter++;\r\n            if (counter > 5) counter = 1;\r\n        }\r\n        html = html.replace(/{{yearsToSelectHtml}}/img, yearsToSelectHtml);\r\n        return {\r\n            yearStart,\r\n            yearEnd,\r\n            html\r\n        };\r\n    }\r\n\r\n    function getDateTimePickerHtml(setting) {\r\n        var selectedDateToShow = getClonedDate(setting.selectedDateToShow),\r\n            html = dateTimePickerHtmlTemplate;\r\n\r\n        html = html.replace(/{{rtlCssClass}}/img, setting.isGregorian ? '' : 'rtl');\r\n        html = html.replace(/{{selectedDateStringAttribute}}/img, setting.inLine ? '' : 'hidden');\r\n        html = html.replace(/{{hourText}}/img, setting.isGregorian ? hourText : hourTextPersian);\r\n        html = html.replace(/{{minuteText}}/img, setting.isGregorian ? minuteText : minuteTextPersian);\r\n        html = html.replace(/{{secondText}}/img, setting.isGregorian ? secondText : secondTextPersian);\r\n        html = html.replace(/{{goTodayText}}/img, setting.isGregorian ? goTodayText : goTodayTextPersian);\r\n        html = html.replace(/{{timePickerAttribute}}/img, setting.enableTimePicker ? '' : 'hidden');\r\n\r\n        var selectedDateString = '',\r\n            todayDateString = '',\r\n            todayDateTimeJson = {}, // year, month, day, hour, minute, second\r\n            rangeSelectorStartDate = !setting.rangeSelector || !setting.rangeSelectorStartDate ? undefined : getClonedDate(setting.rangeSelectorStartDate),\r\n            rangeSelectorEndDate = !setting.rangeSelector || !setting.rangeSelectorEndDate ? undefined : getClonedDate(setting.rangeSelectorEndDate),\r\n            rangeSelectorStartDateJson = {},\r\n            rangeSelectorEndDateJson = {},\r\n            selectedDateTimeJson = {},\r\n            selectedDateTimeToShowJson = {},\r\n            disableBeforeDateTimeJson,\r\n            disableAfterDateTimeJson;\r\n\r\n        if (setting.isGregorian) {\r\n            selectedDateTimeToShowJson = getDateTimeJson1(selectedDateToShow);\r\n            todayDateTimeJson = getDateTimeJson1(new Date());\r\n            rangeSelectorStartDateJson = rangeSelectorStartDate != undefined ? getDateTimeJson1(rangeSelectorStartDate) : undefined;\r\n            rangeSelectorEndDateJson = rangeSelectorEndDate != undefined ? getDateTimeJson1(rangeSelectorEndDate) : undefined;\r\n            selectedDateTimeJson = setting.selectedDate == undefined ? todayDateTimeJson : getDateTimeJson1(setting.selectedDate);\r\n            disableBeforeDateTimeJson = !setting.disableBeforeDate ? undefined : getDateTimeJson1(setting.disableBeforeDate);\r\n            disableAfterDateTimeJson = !setting.disableAfterDate ? undefined : getDateTimeJson1(setting.disableAfterDate);\r\n        } else {\r\n            selectedDateTimeToShowJson = getDateTimeJsonPersian1(selectedDateToShow);\r\n            todayDateTimeJson = getDateTimeJsonPersian1(new Date());\r\n            rangeSelectorStartDateJson = rangeSelectorStartDate != undefined ? getDateTimeJsonPersian1(rangeSelectorStartDate) : undefined;\r\n            rangeSelectorEndDateJson = rangeSelectorEndDate != undefined ? getDateTimeJsonPersian1(rangeSelectorEndDate) : undefined;\r\n            selectedDateTimeJson = setting.selectedDate == undefined ? todayDateTimeJson : getDateTimeJsonPersian1(setting.selectedDate);\r\n            disableBeforeDateTimeJson = !setting.disableBeforeDate ? undefined : getDateTimeJsonPersian1(setting.disableBeforeDate);\r\n            disableAfterDateTimeJson = !setting.disableAfterDate ? undefined : getDateTimeJsonPersian1(setting.disableAfterDate);\r\n        }\r\n\r\n        // بررسی پراپرتی های از تاریخ، تا تاریخ\r\n        if ((setting.fromDate || setting.toDate) && setting.groupId) {\r\n            var $toDateElement = $('[' + mdDatePickerGroupIdAttribute + '=\"' + setting.groupId + '\"][data-toDate]'),\r\n                $fromDateElement = $('[' + mdDatePickerGroupIdAttribute + '=\"' + setting.groupId + '\"][data-fromDate]');\r\n            if (setting.fromDate) {\r\n                var toDateSetting = getSetting2($toDateElement),\r\n                    toDateSelectedDate = toDateSetting.selectedDate;\r\n                disableAfterDateTimeJson = !toDateSelectedDate ? undefined : setting.isGregorian ? getDateTimeJson1(toDateSelectedDate) : getDateTimeJsonPersian1(toDateSelectedDate);\r\n            } else if (setting.toDate) {\r\n                var fromDateSetting = getSetting2($fromDateElement),\r\n                    fromDateSelectedDate = fromDateSetting.selectedDate;\r\n                disableBeforeDateTimeJson = !fromDateSelectedDate ? undefined : setting.isGregorian ? getDateTimeJson1(fromDateSelectedDate) : getDateTimeJsonPersian1(fromDateSelectedDate);\r\n            }\r\n        }\r\n\r\n        if (setting.rangeSelector && rangeSelectorStartDateJson != undefined && rangeSelectorEndDateJson != undefined) {\r\n            selectedDateString = `${getWeekDayName(rangeSelectorStartDateJson.dayOfWeek, setting.isGregorian)}، ${rangeSelectorStartDateJson.day} ${getMonthName(rangeSelectorStartDateJson.month - 1, setting.isGregorian)} ${rangeSelectorStartDateJson.year} - \r\n                ${getWeekDayName(rangeSelectorEndDateJson.dayOfWeek, setting.isGregorian)}، ${rangeSelectorEndDateJson.day} ${getMonthName(rangeSelectorEndDateJson.month - 1, setting.isGregorian)} ${rangeSelectorEndDateJson.year}`;\r\n        } else\r\n            selectedDateString = `${getWeekDayName(selectedDateTimeJson.dayOfWeek, setting.isGregorian)}، ${selectedDateTimeJson.day} ${getMonthName(selectedDateTimeJson.month - 1, setting.isGregorian)} ${selectedDateTimeJson.year}`;\r\n        todayDateString = `${setting.isGregorian ? 'Today,' : 'امروز،'} ${todayDateTimeJson.day} ${getMonthName(todayDateTimeJson.month - 1, setting.isGregorian)} ${todayDateTimeJson.year}`;\r\n        if (!setting.englishNumber) {\r\n            selectedDateString = toPersianNumber(selectedDateString);\r\n            todayDateString = toPersianNumber(todayDateString);\r\n        }\r\n\r\n        if (disableAfterDateTimeJson != undefined && disableAfterDateTimeJson.year <= selectedDateTimeToShowJson.year && disableAfterDateTimeJson.month < selectedDateTimeToShowJson.month)\r\n            selectedDateToShow = setting.isGregorian ? new Date(disableAfterDateTimeJson.year, disableAfterDateTimeJson.month - 1, 1) : getDateTime1(disableAfterDateTimeJson.year, disableAfterDateTimeJson.month, disableAfterDateTimeJson.day);\r\n\r\n        if (disableBeforeDateTimeJson != undefined && disableBeforeDateTimeJson.year >= selectedDateTimeToShowJson.year && disableBeforeDateTimeJson.month > selectedDateTimeToShowJson.month)\r\n            selectedDateToShow = setting.isGregorian ? new Date(disableBeforeDateTimeJson.year, disableBeforeDateTimeJson.month - 1, 1) : getDateTime1(disableBeforeDateTimeJson.year, disableBeforeDateTimeJson.month, disableBeforeDateTimeJson.day);\r\n\r\n        var monthsTdHtml = '',\r\n            numberOfNextMonths = setting.monthsToShow[1] <= 0 ? 0 : setting.monthsToShow[1],\r\n            numberOfPrevMonths = setting.monthsToShow[0] <= 0 ? 0 : setting.monthsToShow[0];\r\n        numberOfPrevMonths *= -1;\r\n        for (var i1 = numberOfPrevMonths; i1 < 0; i1++) {\r\n            setting.selectedDateToShow = addMonthToDateTime(getClonedDate(selectedDateToShow), i1);\r\n            monthsTdHtml += getDateTimePickerMonthHtml1(setting, false, true);\r\n        }\r\n        setting.selectedDateToShow = getClonedDate(selectedDateToShow);\r\n        monthsTdHtml += getDateTimePickerMonthHtml1(setting, false, false);\r\n        for (var i2 = 1; i2 <= numberOfNextMonths; i2++) {\r\n            setting.selectedDateToShow = addMonthToDateTime(getClonedDate(selectedDateToShow), i2);\r\n            monthsTdHtml += getDateTimePickerMonthHtml1(setting, true, false);\r\n        }\r\n\r\n        var totalMonthNumberToShow = Math.abs(numberOfPrevMonths) + 1 + numberOfNextMonths,\r\n            monthTdStyle = totalMonthNumberToShow > 1 ? 'width: ' + (100 / totalMonthNumberToShow).toString() + '%;' : '';\r\n\r\n        monthsTdHtml = monthsTdHtml.replace(/{{monthTdStyle}}/img, monthTdStyle);\r\n\r\n        html = html.replace(/{{selectedDateString}}/img, selectedDateString);\r\n        html = html.replace(/{{todayDateString}}/img, todayDateString);\r\n        html = html.replace(/{{hour}}/img, selectedDateTimeToShowJson.hour);\r\n        html = html.replace(/{{minute}}/img, selectedDateTimeToShowJson.minute);\r\n        html = html.replace(/{{second}}/img, selectedDateTimeToShowJson.second);\r\n        html = html.replace(/{{monthsTdHtml}}/img, monthsTdHtml);\r\n\r\n        return html;\r\n    }\r\n\r\n    function getDateTimePickerMonthHtml1(setting, isNextMonth, isPrevMonth) {\r\n        var selectedDateToShow = getClonedDate(setting.selectedDateToShow),\r\n            selectedDateToShowTemp = getClonedDate(selectedDateToShow),\r\n            selectedDateTime = setting.selectedDate != undefined ? getClonedDate(setting.selectedDate) : undefined,\r\n            isNextOrPrevMonth = isNextMonth || isPrevMonth,\r\n            html = dateTimePickerMonthTableHtmlTemplate;\r\n\r\n        html = html.replace(/{{monthTdAttribute}}/img, isNextMonth ? 'data-next-month' : isPrevMonth ? 'data-prev-month' : '');\r\n        html = html.replace(/{{monthNameAttribute}}/img, !isNextOrPrevMonth ? 'hidden' : '');\r\n        html = html.replace(/{{theadSelectDateButtonTrAttribute}}/img, setting.inLine || !isNextOrPrevMonth ? '' : 'hidden');\r\n        html = html.replace(/{{weekDayShortName1CssClass}}/img, setting.isGregorian ? 'text-danger' : '');\r\n        html = html.replace(/{{weekDayShortName7CssClass}}/img, !setting.isGregorian ? 'text-danger' : '');\r\n        html = html.replace(/{{previousYearText}}/img, setting.isGregorian ? previousYearText : previousYearTextPersian);\r\n        html = html.replace(/{{previousMonthText}}/img, setting.isGregorian ? previousMonthText : previousMonthTextPersian);\r\n        html = html.replace(/{{nextMonthText}}/img, setting.isGregorian ? nextMonthText : nextMonthTextPersian);\r\n        html = html.replace(/{{nextYearText}}/img, setting.isGregorian ? nextYearText : nextYearTextPersian);\r\n        html = html.replace(/{{monthName1}}/img, getMonthName(0, setting.isGregorian));\r\n        html = html.replace(/{{monthName2}}/img, getMonthName(1, setting.isGregorian));\r\n        html = html.replace(/{{monthName3}}/img, getMonthName(2, setting.isGregorian));\r\n        html = html.replace(/{{monthName4}}/img, getMonthName(3, setting.isGregorian));\r\n        html = html.replace(/{{monthName5}}/img, getMonthName(4, setting.isGregorian));\r\n        html = html.replace(/{{monthName6}}/img, getMonthName(5, setting.isGregorian));\r\n        html = html.replace(/{{monthName7}}/img, getMonthName(6, setting.isGregorian));\r\n        html = html.replace(/{{monthName8}}/img, getMonthName(7, setting.isGregorian));\r\n        html = html.replace(/{{monthName9}}/img, getMonthName(8, setting.isGregorian));\r\n        html = html.replace(/{{monthName10}}/img, getMonthName(9, setting.isGregorian));\r\n        html = html.replace(/{{monthName11}}/img, getMonthName(10, setting.isGregorian));\r\n        html = html.replace(/{{monthName12}}/img, getMonthName(11, setting.isGregorian));\r\n        html = html.replace(/{{weekDayShortName1}}/img, getWeekDayShortName(0, setting.isGregorian));\r\n        html = html.replace(/{{weekDayShortName2}}/img, getWeekDayShortName(1, setting.isGregorian));\r\n        html = html.replace(/{{weekDayShortName3}}/img, getWeekDayShortName(2, setting.isGregorian));\r\n        html = html.replace(/{{weekDayShortName4}}/img, getWeekDayShortName(3, setting.isGregorian));\r\n        html = html.replace(/{{weekDayShortName5}}/img, getWeekDayShortName(4, setting.isGregorian));\r\n        html = html.replace(/{{weekDayShortName6}}/img, getWeekDayShortName(5, setting.isGregorian));\r\n        html = html.replace(/{{weekDayShortName7}}/img, getWeekDayShortName(6, setting.isGregorian));\r\n\r\n        var i = 0,\r\n            j = 0,\r\n            firstWeekDayNumber,\r\n            cellNumber = 0,\r\n            tdNumber = 0,\r\n            selectedYear = 0,\r\n            selectedDateNumber = 0,\r\n            selectedMonthName = '',\r\n            todayDateNumber,\r\n            todayDateTimeJson = {}, // year, month, day, hour, minute, second\r\n            dateTimeToShowJson = {}, // year, month, day, hour, minute, second\r\n            numberOfDaysInCurrentMonth,\r\n            $tr = $('<tr />'),\r\n            $td = $('<td />'),\r\n            daysHtml = '',\r\n            currentDateNumber = 0,\r\n            currentMonthInfo = '',\r\n            previousMonthDateNumber = 0,\r\n            nextMonthDateNumber = 0,\r\n            previousYearDateNumber = 0,\r\n            nextYearDateNumber = 0,\r\n            disableBeforeDateTimeNumber = 0,\r\n            disableAfterDateTimeNumber = 0,\r\n            rangeSelectorStartDate = !setting.rangeSelector || setting.rangeSelectorStartDate == undefined ? undefined : getClonedDate(setting.rangeSelectorStartDate),\r\n            rangeSelectorEndDate = !setting.rangeSelector || setting.rangeSelectorEndDate == undefined ? undefined : getClonedDate(setting.rangeSelectorEndDate),\r\n            rangeSelectorStartDateNumber = 0,\r\n            rangeSelectorEndDateNumber = 0,\r\n            dayNumberInString = '0',\r\n            dayOfWeek = '', // نام روز هفته\r\n            monthsDateNumberAndAttr = {\r\n                month1DateNumber: 0,\r\n                month2DateNumber: 0,\r\n                month3DateNumber: 0,\r\n                month4DateNumber: 0,\r\n                month5DateNumber: 0,\r\n                month6DateNumber: 0,\r\n                month7DateNumber: 0,\r\n                month8DateNumber: 0,\r\n                month9DateNumber: 0,\r\n                month10DateNumber: 0,\r\n                month11DateNumber: 0,\r\n                month12DateNumber: 0,\r\n                selectMonth1ButtonCssClass: '',\r\n                selectMonth2ButtonCssClass: '',\r\n                selectMonth3ButtonCssClass: '',\r\n                selectMonth4ButtonCssClass: '',\r\n                selectMonth5ButtonCssClass: '',\r\n                selectMonth6ButtonCssClass: '',\r\n                selectMonth7ButtonCssClass: '',\r\n                selectMonth8ButtonCssClass: '',\r\n                selectMonth9ButtonCssClass: '',\r\n                selectMonth10ButtonCssClass: '',\r\n                selectMonth11ButtonCssClass: '',\r\n                selectMonth12ButtonCssClass: '',\r\n            },\r\n            holiDaysDateNumbers = [],\r\n            disabledDatesNumber = [],\r\n            disableBeforeDateTimeJson = {},\r\n            disableAfterDateTimeJson = {},\r\n            previousYearButtonDisabledAttribute = '',\r\n            previousMonthButtonDisabledAttribute = '',\r\n            selectYearButtonDisabledAttribute = '',\r\n            nextMonthButtonDisabledAttribute = '',\r\n            nextYearButtonDisabledAttribute = '';\r\n\r\n        if (setting.isGregorian) {\r\n            dateTimeToShowJson = getDateTimeJson1(selectedDateToShowTemp);\r\n            todayDateTimeJson = getDateTimeJson1(new Date());\r\n            disableBeforeDateTimeJson = !setting.disableBeforeDate ? undefined : getDateTimeJson1(setting.disableBeforeDate);\r\n            disableAfterDateTimeJson = !setting.disableAfterDate ? undefined : getDateTimeJson1(setting.disableAfterDate);\r\n            firstWeekDayNumber = new Date(dateTimeToShowJson.year, dateTimeToShowJson.month - 1, 1).getDay();\r\n            selectedDateNumber = !selectedDateTime ? 0 : convertToNumber1(getDateTimeJson1(selectedDateTime));\r\n            numberOfDaysInCurrentMonth = getDaysInMonth(dateTimeToShowJson.year, dateTimeToShowJson.month - 1);\r\n            numberOfDaysInPreviousMonth = getDaysInMonth(dateTimeToShowJson.year, dateTimeToShowJson.month - 2);\r\n            previousMonthDateNumber = convertToNumber1(getDateTimeJson1(getLastDayDateOfPreviousMonth(selectedDateToShowTemp, true)));\r\n            nextMonthDateNumber = convertToNumber1(getDateTimeJson1(getFirstDayDateOfNextMonth(selectedDateToShowTemp, true)));\r\n            selectedDateToShowTemp = getClonedDate(selectedDateToShow);\r\n            previousYearDateNumber = convertToNumber1(getDateTimeJson1(new Date(selectedDateToShowTemp.setFullYear(selectedDateToShowTemp.getFullYear() - 1))));\r\n            selectedDateToShowTemp = getClonedDate(selectedDateToShow);\r\n            nextYearDateNumber = convertToNumber1(getDateTimeJson1(new Date(selectedDateToShowTemp.setFullYear(selectedDateToShowTemp.getFullYear() + 1))));\r\n            selectedDateToShowTemp = getClonedDate(selectedDateToShow);\r\n            rangeSelectorStartDateNumber = !setting.rangeSelector || !rangeSelectorStartDate ? 0 : convertToNumber3(rangeSelectorStartDate);\r\n            rangeSelectorEndDateNumber = !setting.rangeSelector || !rangeSelectorEndDate ? 0 : convertToNumber3(rangeSelectorEndDate);\r\n            for (i = 1; i <= 12; i++) {\r\n                monthsDateNumberAndAttr['month' + i.toString() + 'DateNumber'] = convertToNumber1(getDateTimeJson1(new Date(selectedDateToShowTemp.setMonth(i - 1))));\r\n                selectedDateToShowTemp = getClonedDate(selectedDateToShow);\r\n            }\r\n            for (i = 0; i < setting.holiDays.length; i++) {\r\n                holiDaysDateNumbers.push(convertToNumber1(getDateTimeJson1(setting.holiDays[i])));\r\n            }\r\n            for (i = 0; i < setting.disabledDates.length; i++) {\r\n                disabledDatesNumber.push(convertToNumber1(getDateTimeJson1(setting.disabledDates[i])));\r\n            }\r\n        } else {\r\n            dateTimeToShowJson = getDateTimeJsonPersian1(selectedDateToShowTemp);\r\n            todayDateTimeJson = getDateTimeJsonPersian1(new Date());\r\n            disableBeforeDateTimeJson = !setting.disableBeforeDate ? undefined : getDateTimeJsonPersian1(setting.disableBeforeDate);\r\n            disableAfterDateTimeJson = !setting.disableAfterDate ? undefined : getDateTimeJsonPersian1(setting.disableAfterDate);\r\n            firstWeekDayNumber = getDateTimeJsonPersian2(dateTimeToShowJson.year, dateTimeToShowJson.month, 1, 0, 0, 0).dayOfWeek;\r\n            selectedDateNumber = !selectedDateTime ? 0 : convertToNumber1(getDateTimeJsonPersian1(selectedDateTime));\r\n            numberOfDaysInCurrentMonth = getDaysInMonthPersian(dateTimeToShowJson.year, dateTimeToShowJson.month);\r\n            numberOfDaysInPreviousMonth = getDaysInMonthPersian(dateTimeToShowJson.year - 1, dateTimeToShowJson.month - 1);\r\n            previousMonthDateNumber = convertToNumber1(getDateTimeJsonPersian1(getLastDayDateOfPreviousMonth(selectedDateToShowTemp, false)));\r\n            selectedDateToShowTemp = getClonedDate(selectedDateToShow);\r\n            nextMonthDateNumber = convertToNumber1(getDateTimeJsonPersian1(getFirstDayDateOfNextMonth(selectedDateToShowTemp, false)));\r\n            selectedDateToShowTemp = getClonedDate(selectedDateToShow);\r\n            previousYearDateNumber = convertToNumber2(dateTimeToShowJson.year - 1, dateTimeToShowJson.month, dateTimeToShowJson.day);\r\n            nextYearDateNumber = convertToNumber2(dateTimeToShowJson.year + 1, dateTimeToShowJson.month, dateTimeToShowJson.day);\r\n            selectedDateToShowTemp = getClonedDate(selectedDateToShow);\r\n            rangeSelectorStartDateNumber = !setting.rangeSelector || !rangeSelectorStartDate ? 0 : convertToNumber1(getDateTimeJsonPersian1(rangeSelectorStartDate));\r\n            rangeSelectorEndDateNumber = !setting.rangeSelector || !rangeSelectorEndDate ? 0 : convertToNumber1(getDateTimeJsonPersian1(rangeSelectorEndDate));\r\n            for (i = 1; i <= 12; i++) {\r\n                monthsDateNumberAndAttr['month' + i.toString() + 'DateNumber'] = convertToNumber2(dateTimeToShowJson.year, i, getDaysInMonthPersian(dateTimeToShowJson.year, i));\r\n                selectedDateToShowTemp = getClonedDate(selectedDateToShow);\r\n            }\r\n            for (i = 0; i < setting.holiDays.length; i++) {\r\n                holiDaysDateNumbers.push(convertToNumber1(getDateTimeJsonPersian1(setting.holiDays[i])));\r\n            }\r\n            for (i = 0; i < setting.disabledDates.length; i++) {\r\n                disabledDatesNumber.push(convertToNumber1(getDateTimeJsonPersian1(setting.disabledDates[i])));\r\n            }\r\n        }\r\n\r\n        // بررسی پراپرتی های از تاریخ، تا تاریخ\r\n        if ((setting.fromDate || setting.toDate) && setting.groupId) {\r\n            var $toDateElement = $('[' + mdDatePickerGroupIdAttribute + '=\"' + setting.groupId + '\"][data-toDate]'),\r\n                $fromDateElement = $('[' + mdDatePickerGroupIdAttribute + '=\"' + setting.groupId + '\"][data-fromDate]');\r\n            if (setting.fromDate) {\r\n                var toDateSetting = getSetting2($toDateElement),\r\n                    toDateSelectedDate = toDateSetting.selectedDate;\r\n                disableAfterDateTimeJson = !toDateSelectedDate ? undefined : setting.isGregorian ? getDateTimeJson1(toDateSelectedDate) : getDateTimeJsonPersian1(toDateSelectedDate);\r\n            } else if (setting.toDate) {\r\n                var fromDateSetting = getSetting2($fromDateElement),\r\n                    fromDateSelectedDate = fromDateSetting.selectedDate;\r\n                disableBeforeDateTimeJson = !fromDateSelectedDate ? undefined : setting.isGregorian ? getDateTimeJson1(fromDateSelectedDate) : getDateTimeJsonPersian1(fromDateSelectedDate);\r\n            }\r\n        }\r\n\r\n        todayDateNumber = convertToNumber1(todayDateTimeJson);\r\n        selectedYear = setting.englishNumber ? dateTimeToShowJson.year : toPersianNumber(dateTimeToShowJson.year);\r\n        disableBeforeDateTimeNumber = !disableBeforeDateTimeJson ? undefined : convertToNumber1(disableBeforeDateTimeJson);\r\n        disableAfterDateTimeNumber = !disableAfterDateTimeJson ? undefined : convertToNumber1(disableAfterDateTimeJson);\r\n        currentMonthInfo = getMonthName(dateTimeToShowJson.month - 1, setting.isGregorian) + ' ' + dateTimeToShowJson.year.toString();\r\n        if (!setting.englishNumber) currentMonthInfo = toPersianNumber(currentMonthInfo);\r\n        selectedMonthName = getMonthName(dateTimeToShowJson.month - 1, setting.isGregorian);\r\n\r\n        if (setting.yearOffset <= 0) {\r\n            previousYearButtonDisabledAttribute = 'disabled';\r\n            nextYearButtonDisabledAttribute = 'disabled';\r\n            selectYearButtonDisabledAttribute = 'disabled';\r\n        }\r\n\r\n        // روز های ماه قبل\r\n        if (firstWeekDayNumber != 6) {\r\n            if (setting.isGregorian) firstWeekDayNumber--;\r\n            var previousMonthDateTimeJson = addMonthToDateTimeJson(dateTimeToShowJson, -1, setting.isGregorian);\r\n            for (i = numberOfDaysInPreviousMonth - firstWeekDayNumber; i <= numberOfDaysInPreviousMonth; i++) {\r\n                currentDateNumber = convertToNumber2(previousMonthDateTimeJson.year, previousMonthDateTimeJson.month, i);\r\n                dayNumberInString = setting.englishNumber ? zeroPad(i) : toPersianNumber(zeroPad(i));\r\n                $td = $('<td data-nm />')\r\n                    .attr('data-number', currentDateNumber)\r\n                    .html(dayNumberInString);\r\n                if (setting.rangeSelector) {\r\n                    if (currentDateNumber == rangeSelectorStartDateNumber || currentDateNumber == rangeSelectorEndDateNumber)\r\n                        $td.addClass('selected-range-days-start-end');\r\n                    else if (rangeSelectorStartDateNumber > 0 && rangeSelectorEndDateNumber > 0 && currentDateNumber > rangeSelectorStartDateNumber && currentDateNumber < rangeSelectorEndDateNumber)\r\n                        $td.addClass('selected-range-days');\r\n                }\r\n                // روز جمعه\r\n                if (!setting.isGregorian && tdNumber == 6)\r\n                    $td.addClass('text-danger');\r\n                // روز یکشنبه\r\n                else if (setting.isGregorian && tdNumber == 0)\r\n                    $td.addClass('text-danger');\r\n                $tr.append($td);\r\n                cellNumber++;\r\n                tdNumber++;\r\n                if (tdNumber >= 7) {\r\n                    tdNumber = 0;\r\n                    daysHtml += $tr[0].outerHTML;\r\n                    isTrAppended = true;\r\n                    $tr = $('<tr />');\r\n                }\r\n            }\r\n        }\r\n\r\n        // روزهای ماه جاری\r\n        for (i = 1; i <= numberOfDaysInCurrentMonth; i++) {\r\n\r\n            if (tdNumber >= 7) {\r\n                tdNumber = 0;\r\n                daysHtml += $tr[0].outerHTML;\r\n                isTrAppended = true;\r\n                $tr = $('<tr />');\r\n            }\r\n\r\n            // عدد روز\r\n            currentDateNumber = convertToNumber2(dateTimeToShowJson.year, dateTimeToShowJson.month, i);\r\n            dayNumberInString = setting.englishNumber ? zeroPad(i) : toPersianNumber(zeroPad(i));\r\n\r\n            $td = $('<td data-day />')\r\n                .attr('data-number', currentDateNumber)\r\n                .html(dayNumberInString);\r\n\r\n            // امروز\r\n            if (currentDateNumber == todayDateNumber) {\r\n                $td.attr('data-today', '');\r\n                // اگر نام روز هفته انتخاب شده در تکس باکس قبل از تاریخ امروز باشد\r\n                // نباید دیگر نام روز هفته تغییر کند\r\n                if (!dayOfWeek)\r\n                    dayOfWeek = getWeekDayName(tdNumber - 1 < 0 ? 0 : tdNumber - 1, setting.isGregorian);\r\n            }\r\n\r\n            // روز از قبل انتخاب شده\r\n            if (!setting.rangeSelector && selectedDateNumber == currentDateNumber) {\r\n                $td.attr('data-selectedday', '');\r\n                dayOfWeek = getWeekDayName(tdNumber - 1 < 0 ? 0 : tdNumber - 1, setting.isGregorian);\r\n            }\r\n\r\n            // روزهای تعطیل\r\n            for (j = 0; j < holiDaysDateNumbers.length; j++) {\r\n                if (holiDaysDateNumbers[j] != currentDateNumber) continue;\r\n                $td.addClass('text-danger');\r\n                break;\r\n            }\r\n\r\n            // روز جمعه\r\n            if (!setting.isGregorian && tdNumber == 6)\r\n                $td.addClass('text-danger');\r\n            // روز یکشنبه\r\n            else if (setting.isGregorian && tdNumber == 0)\r\n                $td.addClass('text-danger');\r\n\r\n            // روزهای غیر فعال شده\r\n            if (setting.disableBeforeToday) {\r\n                if (currentDateNumber < todayDateNumber) $td.attr('disabled', '');\r\n                if (nextMonthDateNumber < todayDateNumber)\r\n                    nextMonthButtonDisabledAttribute = 'disabled';\r\n                if (nextYearDateNumber < todayDateNumber)\r\n                    nextYearButtonDisabledAttribute = 'disabled';\r\n                if (previousMonthDateNumber < todayDateNumber)\r\n                    previousMonthButtonDisabledAttribute = 'disabled';\r\n                if (previousYearDateNumber < todayDateNumber)\r\n                    previousYearButtonDisabledAttribute = 'disabled';\r\n                for (j = 1; j <= 12; j++) {\r\n                    if (monthsDateNumberAndAttr['month' + j.toString() + 'DateNumber'] < todayDateNumber)\r\n                        monthsDateNumberAndAttr['selectMonth' + j.toString() + 'ButtonCssClass'] = 'disabled';\r\n                }\r\n            }\r\n            if (setting.disableAfterToday) {\r\n                if (currentDateNumber > todayDateNumber) $td.attr('disabled', '');\r\n                if (nextMonthDateNumber > todayDateNumber)\r\n                    nextMonthButtonDisabledAttribute = 'disabled';\r\n                if (nextYearDateNumber > todayDateNumber)\r\n                    nextYearButtonDisabledAttribute = 'disabled';\r\n                if (previousMonthDateNumber > todayDateNumber)\r\n                    previousMonthButtonDisabledAttribute = 'disabled';\r\n                if (previousYearDateNumber > todayDateNumber)\r\n                    previousYearButtonDisabledAttribute = 'disabled';\r\n                for (j = 1; j <= 12; j++) {\r\n                    if (monthsDateNumberAndAttr['month' + j.toString() + 'DateNumber'] > todayDateNumber)\r\n                        monthsDateNumberAndAttr['selectMonth' + j.toString() + 'ButtonCssClass'] = 'disabled';\r\n                }\r\n            }\r\n            if (disableAfterDateTimeNumber) {\r\n                if (currentDateNumber > disableAfterDateTimeNumber) $td.attr('disabled', '');\r\n                if (nextMonthDateNumber > disableAfterDateTimeNumber)\r\n                    nextMonthButtonDisabledAttribute = 'disabled';\r\n                if (nextYearDateNumber > disableAfterDateTimeNumber)\r\n                    nextYearButtonDisabledAttribute = 'disabled';\r\n                if (previousMonthDateNumber > disableAfterDateTimeNumber)\r\n                    previousMonthButtonDisabledAttribute = 'disabled';\r\n                if (previousYearDateNumber > disableAfterDateTimeNumber)\r\n                    previousYearButtonDisabledAttribute = 'disabled';\r\n                for (j = 1; j <= 12; j++) {\r\n                    if (monthsDateNumberAndAttr['month' + j.toString() + 'DateNumber'] > disableAfterDateTimeNumber)\r\n                        monthsDateNumberAndAttr['selectMonth' + j.toString() + 'ButtonCssClass'] = 'disabled';\r\n                }\r\n            }\r\n            if (disableBeforeDateTimeNumber) {\r\n                if (currentDateNumber < disableBeforeDateTimeNumber) $td.attr('disabled', '');\r\n                if (nextMonthDateNumber < disableBeforeDateTimeNumber)\r\n                    nextMonthButtonDisabledAttribute = 'disabled';\r\n                if (nextYearDateNumber < disableBeforeDateTimeNumber)\r\n                    nextYearButtonDisabledAttribute = 'disabled';\r\n                if (previousMonthDateNumber < disableBeforeDateTimeNumber)\r\n                    previousMonthButtonDisabledAttribute = 'disabled';\r\n                if (previousYearDateNumber < disableBeforeDateTimeNumber)\r\n                    previousYearButtonDisabledAttribute = 'disabled';\r\n                for (j = 1; j <= 12; j++) {\r\n                    if (monthsDateNumberAndAttr['month' + j.toString() + 'DateNumber'] < disableBeforeDateTimeNumber)\r\n                        monthsDateNumberAndAttr['selectMonth' + j.toString() + 'ButtonCssClass'] = 'disabled';\r\n                }\r\n            }\r\n            for (j = 0; j < disabledDatesNumber.length; j++) {\r\n                if (currentDateNumber == disabledDatesNumber[j])\r\n                    $td.attr('disabled', '');\r\n            }\r\n            // \\\\\r\n\r\n            if (setting.rangeSelector) {\r\n                if (currentDateNumber == rangeSelectorStartDateNumber || currentDateNumber == rangeSelectorEndDateNumber)\r\n                    $td.addClass('selected-range-days-start-end');\r\n                else if (rangeSelectorStartDateNumber > 0 && rangeSelectorEndDateNumber > 0 && currentDateNumber > rangeSelectorStartDateNumber && currentDateNumber < rangeSelectorEndDateNumber)\r\n                    $td.addClass('selected-range-days');\r\n            }\r\n\r\n            $tr.append($td);\r\n            isTrAppended = false;\r\n\r\n            tdNumber++;\r\n            cellNumber++;\r\n        }\r\n\r\n        if (tdNumber >= 7) {\r\n            tdNumber = 0;\r\n            daysHtml += $tr[0].outerHTML;\r\n            isTrAppended = true;\r\n            $tr = $('<tr />');\r\n        }\r\n\r\n        // روزهای ماه بعد\r\n        var nextMonthDateTimeJson = addMonthToDateTimeJson(dateTimeToShowJson, 1, setting.isGregorian);\r\n        for (i = 1; i <= 42 - cellNumber; i++) {\r\n            dayNumberInString = setting.englishNumber ? zeroPad(i) : toPersianNumber(zeroPad(i));\r\n            currentDateNumber = convertToNumber2(nextMonthDateTimeJson.year, nextMonthDateTimeJson.month, i);\r\n            $td = $('<td data-nm />')\r\n                .attr('data-number', currentDateNumber)\r\n                .html(dayNumberInString);\r\n            if (setting.rangeSelector) {\r\n                if (currentDateNumber == rangeSelectorStartDateNumber || currentDateNumber == rangeSelectorEndDateNumber)\r\n                    $td.addClass('selected-range-days-start-end');\r\n                else if (rangeSelectorStartDateNumber > 0 && rangeSelectorEndDateNumber > 0 && currentDateNumber > rangeSelectorStartDateNumber && currentDateNumber < rangeSelectorEndDateNumber)\r\n                    $td.addClass('selected-range-days');\r\n            }\r\n            // روز جمعه\r\n            if (!setting.isGregorian && tdNumber == 6)\r\n                $td.addClass('text-danger');\r\n            // روز یکشنبه\r\n            else if (setting.isGregorian && tdNumber == 0)\r\n                $td.addClass('text-danger');\r\n            $tr.append($td);\r\n            tdNumber++;\r\n            if (tdNumber >= 7) {\r\n                tdNumber = 0;\r\n                daysHtml += $tr[0].outerHTML;\r\n                isTrAppended = true;\r\n                $tr = $('<tr />');\r\n            }\r\n        }\r\n\r\n        if (!isTrAppended) {\r\n            daysHtml += $tr[0].outerHTML;\r\n            isTrAppended = true;\r\n        }\r\n\r\n        html = html.replace(/{{currentMonthInfo}}/img, currentMonthInfo);\r\n        html = html.replace(/{{selectedYear}}/img, selectedYear);\r\n        html = html.replace(/{{selectedMonthName}}/img, selectedMonthName);\r\n        html = html.replace(/{{daysHtml}}/img, daysHtml);\r\n        html = html.replace(/{{previousYearButtonDisabledAttribute}}/img, previousYearButtonDisabledAttribute);\r\n        html = html.replace(/{{previousYearButtonDateNumber}}/img, previousYearDateNumber);\r\n        html = html.replace(/{{previousMonthButtonDisabledAttribute}}/img, previousMonthButtonDisabledAttribute);\r\n        html = html.replace(/{{previousMonthButtonDateNumber}}/img, previousMonthDateNumber);\r\n        html = html.replace(/{{selectYearButtonDisabledAttribute}}/img, selectYearButtonDisabledAttribute);\r\n        html = html.replace(/{{nextMonthButtonDisabledAttribute}}/img, nextMonthButtonDisabledAttribute);\r\n        html = html.replace(/{{nextMonthButtonDateNumber}}/img, nextMonthDateNumber);\r\n        html = html.replace(/{{nextYearButtonDisabledAttribute}}/img, nextYearButtonDisabledAttribute);\r\n        html = html.replace(/{{nextYearButtonDateNumber}}/img, nextYearDateNumber);\r\n        html = html.replace(/{{dropDownMenuMonth1DateNumber}}/img, monthsDateNumberAndAttr.month1DateNumber);\r\n        html = html.replace(/{{dropDownMenuMonth2DateNumber}}/img, monthsDateNumberAndAttr.month2DateNumber);\r\n        html = html.replace(/{{dropDownMenuMonth3DateNumber}}/img, monthsDateNumberAndAttr.month3DateNumber);\r\n        html = html.replace(/{{dropDownMenuMonth4DateNumber}}/img, monthsDateNumberAndAttr.month4DateNumber);\r\n        html = html.replace(/{{dropDownMenuMonth5DateNumber}}/img, monthsDateNumberAndAttr.month5DateNumber);\r\n        html = html.replace(/{{dropDownMenuMonth6DateNumber}}/img, monthsDateNumberAndAttr.month6DateNumber);\r\n        html = html.replace(/{{dropDownMenuMonth7DateNumber}}/img, monthsDateNumberAndAttr.month7DateNumber);\r\n        html = html.replace(/{{dropDownMenuMonth8DateNumber}}/img, monthsDateNumberAndAttr.month8DateNumber);\r\n        html = html.replace(/{{dropDownMenuMonth9DateNumber}}/img, monthsDateNumberAndAttr.month9DateNumber);\r\n        html = html.replace(/{{dropDownMenuMonth10DateNumber}}/img, monthsDateNumberAndAttr.month10DateNumber);\r\n        html = html.replace(/{{dropDownMenuMonth11DateNumber}}/img, monthsDateNumberAndAttr.month11DateNumber);\r\n        html = html.replace(/{{dropDownMenuMonth12DateNumber}}/img, monthsDateNumberAndAttr.month12DateNumber);\r\n        html = html.replace(/{{selectMonth1ButtonCssClass}}/img, monthsDateNumberAndAttr.selectMonth1ButtonCssClass);\r\n        html = html.replace(/{{selectMonth2ButtonCssClass}}/img, monthsDateNumberAndAttr.selectMonth2ButtonCssClass);\r\n        html = html.replace(/{{selectMonth3ButtonCssClass}}/img, monthsDateNumberAndAttr.selectMonth3ButtonCssClass);\r\n        html = html.replace(/{{selectMonth4ButtonCssClass}}/img, monthsDateNumberAndAttr.selectMonth4ButtonCssClass);\r\n        html = html.replace(/{{selectMonth5ButtonCssClass}}/img, monthsDateNumberAndAttr.selectMonth5ButtonCssClass);\r\n        html = html.replace(/{{selectMonth6ButtonCssClass}}/img, monthsDateNumberAndAttr.selectMonth6ButtonCssClass);\r\n        html = html.replace(/{{selectMonth7ButtonCssClass}}/img, monthsDateNumberAndAttr.selectMonth7ButtonCssClass);\r\n        html = html.replace(/{{selectMonth8ButtonCssClass}}/img, monthsDateNumberAndAttr.selectMonth8ButtonCssClass);\r\n        html = html.replace(/{{selectMonth9ButtonCssClass}}/img, monthsDateNumberAndAttr.selectMonth9ButtonCssClass);\r\n        html = html.replace(/{{selectMonth10ButtonCssClass}}/img, monthsDateNumberAndAttr.selectMonth10ButtonCssClass);\r\n        html = html.replace(/{{selectMonth11ButtonCssClass}}/img, monthsDateNumberAndAttr.selectMonth11ButtonCssClass);\r\n        html = html.replace(/{{selectMonth12ButtonCssClass}}/img, monthsDateNumberAndAttr.selectMonth12ButtonCssClass);\r\n\r\n        return html;\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region Events\r\n\r\n    // کلیک روی روزها\r\n    $(document).on('click', mdDatePickerContainerSelector + ' [data-day]', function () {\r\n        var $this = $(this),\r\n            disabled = $this.attr('disabled'),\r\n            dateNumber = Number($this.attr('data-number')),\r\n            setting = getSetting1($this),\r\n            selectedDateJson = setting.selectedDate == undefined ? undefined : getDateTimeJson1(setting.selectedDate),\r\n            selectedDateToShow = getClonedDate(setting.selectedDateToShow);\r\n        if (disabled) return;\r\n        selectedDateToShow = getDateTime4(dateNumber, selectedDateToShow, setting);\r\n\r\n        if (setting.rangeSelector) { // اگر رنج سلکتور فعال بود\r\n            if (setting.rangeSelectorStartDate != undefined && setting.rangeSelectorEndDate != undefined) {\r\n                setting.rangeSelectorStartDate = undefined;\r\n                setting.rangeSelectorEndDate = undefined;\r\n                $this.parents('table:last').find('td.selected-range-days-start-end,td.selected-range-days')\r\n                    .removeClass('selected-range-days')\r\n                    .removeClass('selected-range-days-start-end');\r\n            }\r\n            if (setting.rangeSelectorStartDate == undefined) {\r\n                $this.addClass('selected-range-days-start-end');\r\n                setting.rangeSelectorStartDate = getClonedDate(selectedDateToShow);\r\n                setting.selectedDate = getClonedDate(selectedDateToShow);\r\n                setting.selectedDateToShow = getClonedDate(selectedDateToShow);\r\n            } else if (setting.rangeSelectorStartDate != undefined && setting.rangeSelectorEndDate == undefined) {\r\n                $this.addClass('selected-range-days-start-end');\r\n                setting.rangeSelectorEndDate = getClonedDate(selectedDateToShow);\r\n                setSelectedData(setting);\r\n            }\r\n            setSetting1($this, setting);\r\n            if (setting.rangeSelectorStartDate != undefined && setting.rangeSelectorEndDate != undefined) {\r\n                if (!setting.inLine) hidePopover($(mdDatePickerPopoverSelector));\r\n                else updateCalendarHtml1($this, setting);\r\n            }\r\n            return;\r\n        }\r\n        setting.selectedDate = getClonedDate(selectedDateToShow);\r\n        setting.selectedDateToShow = getClonedDate(selectedDateToShow);\r\n        if (selectedDateJson != undefined) {\r\n            setting.selectedDate.setHours(selectedDateJson.hour);\r\n            setting.selectedDate.setMinutes(selectedDateJson.minute);\r\n            setting.selectedDate.setSeconds(selectedDateJson.second);\r\n        }\r\n        setSetting1($this, setting);\r\n        setSelectedData(setting);\r\n        if (!setting.inLine) hidePopover($(mdDatePickerPopoverSelector));\r\n        else updateCalendarHtml1($this, setting);\r\n    });\r\n\r\n    // هاور روی روزها\r\n    $(document).on('mouseenter', mdDatePickerContainerSelector + ' [data-day],' + mdDatePickerContainerSelector + ' [data-nm],' + mdDatePickerContainerSelector + ' [data-pm]', function () {\r\n        var $this = $(this),\r\n            $allTdDays = $this.parents('table:last').find('td[data-day]'),\r\n            disabled = $this.attr('disabled'),\r\n            dateNumber = Number($this.attr('data-number')),\r\n            setting = getSetting1($this);\r\n        if (disabled || !setting.rangeSelector || (setting.rangeSelectorStartDate != undefined && setting.rangeSelectorEndDate != undefined)) return;\r\n\r\n        $allTdDays.removeClass('selected-range-days');\r\n\r\n        var rangeSelectorStartDate = !setting.rangeSelectorStartDate ? undefined : getClonedDate(setting.rangeSelectorStartDate),\r\n            rangeSelectorEndDate = !setting.rangeSelectorEndDate ? undefined : getClonedDate(setting.rangeSelectorEndDate),\r\n            rangeSelectorStartDateNumber = 0,\r\n            rangeSelectorEndDateNumber = 0;\r\n\r\n        if (setting.isGregorian) {\r\n            rangeSelectorStartDateNumber = !rangeSelectorStartDate ? 0 : convertToNumber3(rangeSelectorStartDate);\r\n            rangeSelectorEndDateNumber = !rangeSelectorEndDate ? 0 : convertToNumber3(rangeSelectorEndDate);\r\n        } else {\r\n            rangeSelectorStartDateNumber = !rangeSelectorStartDate ? 0 : convertToNumber1(getDateTimeJsonPersian1(rangeSelectorStartDate));\r\n            rangeSelectorEndDateNumber = !rangeSelectorEndDate ? 0 : convertToNumber1(getDateTimeJsonPersian1(rangeSelectorEndDate));\r\n        }\r\n\r\n        if (rangeSelectorStartDateNumber > 0 && dateNumber > rangeSelectorStartDateNumber) {\r\n            for (var i1 = rangeSelectorStartDateNumber; i1 <= dateNumber; i1++) {\r\n                $allTdDays.filter('[data-number=\"' + i1.toString() + '\"]:not(.selected-range-days-start-end)').addClass('selected-range-days');\r\n            }\r\n        } else if (rangeSelectorEndDateNumber > 0 && dateNumber < rangeSelectorEndDateNumber) {\r\n            for (var i2 = dateNumber; i2 <= rangeSelectorEndDateNumber; i2++) {\r\n                $allTdDays.filter('[data-number=\"' + i2.toString() + '\"]:not(.selected-range-days-start-end)').addClass('selected-range-days');\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n    // کلیک روی دکمه هایی که تاریخ را تغییر می دهند\r\n    $(document).on('click', mdDatePickerContainerSelector + ' [data-changedatebutton]', function () {\r\n        var $this = $(this),\r\n            disabled = $this.attr('disabled'),\r\n            dateNumber = Number($this.attr('data-number')),\r\n            setting = getSetting1($this),\r\n            selectedDateToShow = getClonedDate(setting.selectedDateToShow);\r\n        if (disabled) return;\r\n        selectedDateToShow = getDateTime4(dateNumber, selectedDateToShow, setting);\r\n        setting.selectedDateToShow = getClonedDate(selectedDateToShow);\r\n        setSetting1($this, setting);\r\n        updateCalendarHtml1($this, setting);\r\n    });\r\n\r\n    // عوض کردن ساعت\r\n    $(document).on('blur', mdDatePickerContainerSelector + ' input[data-clock]', function () {\r\n        var $this = $(this),\r\n            $thisContainer = $this.parents(mdDatePickerContainerSelector + ':first'),\r\n            $hour = $thisContainer.find('input[type=\"text\"][data-clock=\"hour\"]'),\r\n            $minute = $thisContainer.find('input[type=\"text\"][data-clock=\"minute\"]'),\r\n            $second = $thisContainer.find('input[type=\"text\"][data-clock=\"second\"]'),\r\n            hour = Number($hour.val()),\r\n            minute = Number($minute.val()),\r\n            second = Number($second.val()),\r\n            setting = getSetting1($this);\r\n\r\n        if (!setting.enableTimePicker) return;\r\n\r\n        if (setting.selectedDateToShow == undefined) setting.selectedDateToShow = new Date();\r\n        hour = !isNumber(hour) ? setting.selectedDateToShow.getHours() : hour;\r\n        minute = !isNumber(minute) ? setting.selectedDateToShow.getMinutes() : minute;\r\n        second = !isNumber(second) ? setting.selectedDateToShow.getSeconds() : second;\r\n\r\n        if (setting.selectedDate == undefined) setting.selectedDate = new Date();\r\n        setting.selectedDate = new Date(setting.selectedDate.setHours(hour));\r\n        setting.selectedDate = new Date(setting.selectedDate.setMinutes(minute));\r\n        setting.selectedDate = new Date(setting.selectedDate.setSeconds(second));\r\n\r\n        setSetting1($this, setting);\r\n        setSelectedData(setting);\r\n    });\r\n\r\n    // کلیک روی سال انتخابی برای عوض کردن سال\r\n    $(document).on('click', mdDatePickerContainerSelector + ' [select-year-button]', function () {\r\n        var $this = $(this),\r\n            setting = getSetting1($this),\r\n            yearsToSelectObject = getYearsToSelectHtml(setting),\r\n            yearsRangeText = ` ${yearsToSelectObject.yearStart} - ${yearsToSelectObject.yearEnd} `,\r\n            popoverHeaderHtml = popoverHeaderSelectYearHtmlTemplate,\r\n            dateTimePickerYearsToSelectHtml = yearsToSelectObject.html;\r\n        popoverHeaderHtml = popoverHeaderHtml.replace(/{{rtlCssClass}}/img, setting.isGregorian ? '' : 'rtl');\r\n        popoverHeaderHtml = popoverHeaderHtml.replace(/{{yearsRangeText}}/img, setting.isGregorian ? yearsRangeText : toPersianNumber(yearsRangeText));\r\n        popoverHeaderHtml = popoverHeaderHtml.replace(/{{previousText}}/img, setting.isGregorian ? previousText : previousTextPersian);\r\n        popoverHeaderHtml = popoverHeaderHtml.replace(/{{nextText}}/img, setting.isGregorian ? nextText : nextTextPersian);\r\n        popoverHeaderHtml = popoverHeaderHtml.replace(/{{latestPreviousYear}}/img, yearsToSelectObject.yearStart > yearsToSelectObject.yearEnd ? yearsToSelectObject.yearEnd : yearsToSelectObject.yearStart);\r\n        popoverHeaderHtml = popoverHeaderHtml.replace(/{{latestNextYear}}/img, yearsToSelectObject.yearStart > yearsToSelectObject.yearEnd ? yearsToSelectObject.yearStart : yearsToSelectObject.yearEnd);\r\n        setPopoverHeaderHtml(popoverHeaderHtml);\r\n        $this.parents(mdDatePickerContainerSelector + ':first').find('[data-name=\"dateTimePickerYearsToSelectContainer\"]').html(dateTimePickerYearsToSelectHtml);\r\n        $this.parents(mdDatePickerContainerSelector + ':first').find('.select-year-box').removeClass('w-0');\r\n    });\r\n\r\n    // کلیک روی دکمه های عوض کردن رنج سال انتخابی\r\n    $(document).on('click', '[data-yearrangebuttonchange]', function () {\r\n        var $this = $(this),\r\n            setting = getSetting1($this),\r\n            isNext = $this.attr('data-yearrangebuttonchange') == '1',\r\n            yearStart = Number($this.attr('data-year')) - 1,\r\n            yearsToSelectObject = getYearsToSelectHtml(setting, isNext ? yearStart : yearStart - setting.yearOffset * 2),\r\n            yearsRangeText = ` ${yearsToSelectObject.yearStart} - ${yearsToSelectObject.yearEnd} `,\r\n            popoverHeaderHtml = popoverHeaderSelectYearHtmlTemplate,\r\n            dateTimePickerYearsToSelectHtml = yearsToSelectObject.html;\r\n        popoverHeaderHtml = popoverHeaderHtml.replace(/{{rtlCssClass}}/img, setting.isGregorian ? '' : 'rtl');\r\n        popoverHeaderHtml = popoverHeaderHtml.replace(/{{yearsRangeText}}/img, setting.isGregorian ? yearsRangeText : toPersianNumber(yearsRangeText));\r\n        popoverHeaderHtml = popoverHeaderHtml.replace(/{{previousText}}/img, setting.isGregorian ? previousText : previousTextPersian);\r\n        popoverHeaderHtml = popoverHeaderHtml.replace(/{{nextText}}/img, setting.isGregorian ? nextText : nextTextPersian);\r\n        popoverHeaderHtml = popoverHeaderHtml.replace(/{{latestPreviousYear}}/img, yearsToSelectObject.yearStart > yearsToSelectObject.yearEnd ? yearsToSelectObject.yearEnd : yearsToSelectObject.yearStart);\r\n        popoverHeaderHtml = popoverHeaderHtml.replace(/{{latestNextYear}}/img, yearsToSelectObject.yearStart > yearsToSelectObject.yearEnd ? yearsToSelectObject.yearStart : yearsToSelectObject.yearEnd);\r\n        setPopoverHeaderHtml(popoverHeaderHtml);\r\n        $(mdDatePickerContainerSelector).find('[data-name=\"dateTimePickerYearsToSelectContainer\"]').html(dateTimePickerYearsToSelectHtml);\r\n    });\r\n\r\n    // برو به امروز\r\n    $(document).on('click', mdDatePickerContainerSelector + ' [data-go-today]', function () {\r\n        var $this = $(this),\r\n            setting = getSetting1($this);\r\n        setting.selectedDateToShow = new Date();\r\n        setSetting1($this, setting);\r\n        updateCalendarHtml1($this, setting);\r\n    });\r\n\r\n    // مخفی کردن تقویم با کلیک روی جایی که تقویم نیست\r\n    $('html').on('click', function (e) {\r\n        if (triggerStart) return;\r\n        var $target = $(e.target),\r\n            $popoverDescriber = getPopoverDescriber($target);\r\n        if ($popoverDescriber.length >= 1) return;\r\n        hidePopover($(mdDatePickerPopoverSelector));\r\n    });\r\n\r\n    //#endregion\r\n\r\n    var methods = {\r\n        init: function (options) {\r\n            return this.each(function () {\r\n                var $this = $(this),\r\n                    setting = $.extend({\r\n                        englishNumber: false,\r\n                        placement: 'bottom',\r\n                        trigger: 'click',\r\n                        enableTimePicker: false,\r\n                        targetTextSelector: '',\r\n                        targetDateSelector: '',\r\n                        toDate: false,\r\n                        fromDate: false,\r\n                        groupId: '',\r\n                        disabled: false,\r\n                        textFormat: '',\r\n                        dateFormat: '',\r\n                        isGregorian: false,\r\n                        inLine: false,\r\n                        selectedDate: undefined,\r\n                        selectedDateToShow: new Date(),\r\n                        monthsToShow: [0, 0],\r\n                        yearOffset: 15,\r\n                        holiDays: [],\r\n                        disabledDates: [],\r\n                        disableBeforeToday: false,\r\n                        disableAfterToday: false,\r\n                        disableBeforeDate: undefined,\r\n                        disableAfterDate: undefined,\r\n                        rangeSelector: false,\r\n                        rangeSelectorStartDate: undefined,\r\n                        rangeSelectorEndDate: undefined\r\n                    }, options);\r\n                $this.attr(mdDatePickerFlag, '');\r\n                if (setting.targetDateSelector) {\r\n                    var targetValue = $(setting.targetDateSelector).val();\r\n                    if (targetValue) {\r\n                        setting.selectedDate = new Date(Date.parse(targetValue));\r\n                        setting.selectedDateToShow = getClonedDate(setting.selectedDate);\r\n                    }\r\n                } else if (setting.targetTextSelector) {\r\n                    var textValue = $(setting.targetTextSelector).val();\r\n                    if (textValue) {\r\n                        setting.selectedDate = parseDateTime(textValue, setting);\r\n                        setting.selectedDateToShow = getClonedDate(setting.selectedDate);\r\n                    }\r\n                }\r\n                if (setting.rangeSelector) {\r\n                    setting.fromDate = false;\r\n                    setting.toDate = false;\r\n                    setting.enableTimePicker = false;\r\n                }\r\n                if ((setting.fromDate || setting.toDate) && setting.groupId) {\r\n                    $this.attr(mdDatePickerGroupIdAttribute, setting.groupId);\r\n                    if (setting.toDate) $this.attr('data-toDate', '');\r\n                    else if (setting.fromDate) $this.attr('data-fromDate', '');\r\n                }\r\n                if (setting.isGregorian) setting.englishNumber = true;\r\n                if (setting.toDate && setting.fromDate) throw new Error(`MdPersianDateTimePicker => You can not set true 'toDate' and 'fromDate' together`);\r\n                if (!setting.groupId && (setting.toDate || setting.fromDate)) throw new Error(`MdPersianDateTimePicker => When you set 'toDate' or 'fromDate' true, you have to set 'groupId'`);\r\n                if (setting.disable) $this.attr('disabled', '');\r\n                if (setting.enableTimePicker && !setting.textFormat) setting.textFormat = 'yyyy/MM/dd   HH:mm:ss';\r\n                else if (!setting.enableTimePicker && !setting.textFormat) setting.textFormat = 'yyyy/MM/dd';\r\n                if (setting.enableTimePicker && !setting.dateFormat) setting.dateFormat = 'yyyy/MM/dd   HH:mm:ss';\r\n                else if (!setting.enableTimePicker && !setting.dateFormat) setting.dateFormat = 'yyyy/MM/dd';\r\n                $this.data(mdPluginName, setting);\r\n                if (setting.selectedDate != undefined) {\r\n                    setSelectedData(setting);\r\n                    triggerChangeCalling = false;\r\n                }\r\n                // نمایش تقویم\r\n                if (setting.inLine) {\r\n                    $this.append(getDateTimePickerHtml(setting));\r\n                } else {\r\n                    $this.popover({\r\n                        container: 'body',\r\n                        content: '',\r\n                        html: true,\r\n                        placement: setting.placement,\r\n                        title: ' ',\r\n                        trigger: 'manual',\r\n                        template: popverHtmlTemplate,\r\n                        sanitize: false,\r\n                    }).on(setting.trigger, function () {\r\n                        triggerStart = true;\r\n                        $this = $(this);\r\n                        setting = $this.data(mdPluginName);\r\n                        if (setting.disabled) return;\r\n                        hideOthers($this);\r\n                        showPopover($this);\r\n                        setTimeout(function () {\r\n                            setting.selectedDateToShow = setting.selectedDate != undefined ? getClonedDate(setting.selectedDate) : new Date();\r\n                            var calendarHtml = getDateTimePickerHtml(setting);\r\n                            setPopoverHeaderHtml($(calendarHtml).find('[data-selecteddatestring]').text().trim());\r\n                            $('#' + $this.attr('aria-describedby')).find('[data-name=\"mds-datetimepicker-popoverbody\"]').html(calendarHtml);\r\n                            $this.popover('update');\r\n                            triggerStart = false;\r\n                        }, 10);\r\n                    });\r\n                }\r\n                $(document).on('change', setting.targetTextSelector, function () {\r\n                    if (triggerChangeCalling) {\r\n                        setTimeout(function () {\r\n                            triggerChangeCalling = false;\r\n                        }, 100);\r\n                        return;\r\n                    }\r\n                    var $this1 = $(this),\r\n                        value1 = $this1.val();\r\n                    if (!value1) {\r\n                        $this.MdPersianDateTimePicker('clearDate');\r\n                        return;\r\n                    }\r\n                    try {\r\n                        if (!setting.rangeSelector)\r\n                            $this.MdPersianDateTimePicker('setDate', parseDateTime(value1, setting));\r\n                        else {\r\n                            let dateValues = value1.split(' - ');\r\n                            $this.MdPersianDateTimePicker('setDateRange', parseDateTime(dateValues[0], setting), parseDateTime(dateValues[1], setting));\r\n                        }\r\n                    } catch (e) {\r\n                        setSelectedData(setting);\r\n                    }\r\n                });\r\n            });\r\n        },\r\n        getText: function () {\r\n            return getSelectedDateTimeTextFormatted(getSetting2($(this)));\r\n        },\r\n        getDate: function () {\r\n            return getSetting2($(this)).selectedDate;\r\n        },\r\n        getDateRange: function () {\r\n            var setting = getSetting2($(this));\r\n            if (setting.rangeSelector) return [setting.rangeSelectorStartDate, setting.rangeSelectorEndDate];\r\n            if (!setting.toDate && !setting.fromDate || !setting.groupId) return [];\r\n            var fromDateSetting = getSetting2($('[' + mdDatePickerGroupIdAttribute + '=\"' + setting.groupId + '\"][data-fromDate]')),\r\n                toDateSetting = getSetting2($('[' + mdDatePickerGroupIdAttribute + '=\"' + setting.groupId + '\"][data-toDate]'));\r\n            return [fromDateSetting.selectedDate, toDateSetting.selectedDate];\r\n        },\r\n        setDate: function (dateTimeObject) {\r\n            if (dateTimeObject == undefined) throw new Error('MdPersianDateTimePicker => setDate => مقدار ورودی نا معتبر است');\r\n            var $this = $(this),\r\n                setting = getSetting2($this);\r\n            setting.selectedDate = getClonedDate(dateTimeObject);\r\n            setSetting2($this, setting);\r\n            setSelectedData(setting);\r\n        },\r\n        setOption: function (name, value) {\r\n            if (!name) throw new Error('MdPersianDateTimePicker => setOption => name parameter مقدار ورودی نا معتبر است');\r\n            var $this = $(this),\r\n                setting = getSetting2($this);\r\n            setting[name] = value;\r\n            setSetting2($this, setting);\r\n        },\r\n        setDateRange: function (startDateTimeObject, endDateTimeObject) {\r\n            if (startDateTimeObject == undefined || endDateTimeObject == undefined) throw new Error('MdPersianDateTimePicker => setDateRange => مقدار ورودی نا معتبر است');\r\n            if (startDateTimeObject.getTime() >= endDateTimeObject.getTime()) throw new Error('MdPersianDateTimePicker => setDateRange => مقدار ورودی نا معتبر است, تاریخ شروع باید بزرگتر از تاریخ پایان باشد');\r\n            var $this = $(this),\r\n                setting = getSetting2($this);\r\n            if (setting.rangeSelector) {\r\n                setting.selectedDate = startDateTimeObject;\r\n                setting.rangeSelectorStartDate = startDateTimeObject;\r\n                setting.rangeSelectorEndDate = endDateTimeObject;\r\n                setSetting2($this, setting);\r\n                setSelectedData(setting);\r\n            } else if ((setting.fromDate || setting.toDate) && setting.groupId) {\r\n                var $toDateElement = $('[' + mdDatePickerGroupIdAttribute + '=\"' + setting.groupId + '\"][data-toDate]'),\r\n                    $fromDateElement = $('[' + mdDatePickerGroupIdAttribute + '=\"' + setting.groupId + '\"][data-fromDate]');\r\n                if ($fromDateElement.length > 0) {\r\n                    var fromDateSetting = getSetting2($fromDateElement);\r\n                    fromDateSetting.selectedDate = startDateTimeObject;\r\n                    setSetting2($fromDateElement, fromDateSetting);\r\n                    setSelectedData(fromDateSetting);\r\n                }\r\n                if ($toDateElement.length > 0) {\r\n                    var toDateSetting = getSetting2($toDateElement);\r\n                    toDateSetting.selectedDate = endDateTimeObject;\r\n                    setSetting2($toDateElement, toDateSetting);\r\n                    setSelectedData(toDateSetting);\r\n                }\r\n            }\r\n        },\r\n        clearDate: function () {\r\n            var $this = $(this),\r\n                setting = getSetting2($this);\r\n            setting.selectedDate = undefined;\r\n            setSetting2($this, setting);\r\n            setSelectedData(setting);\r\n        },\r\n        setDatePersian: function (dateTimeObjectJson) {\r\n            if (dateTimeObjectJson == undefined) throw new Error('MdPersianDateTimePicker => setDatePersian => ورودی باید از نوه جی سان با حداقل پراپرتی های year, month, day باشد');\r\n            dateTimeObjectJson.hour = !dateTimeObjectJson.hour ? 0 : dateTimeObjectJson.hour;\r\n            dateTimeObjectJson.minute = !dateTimeObjectJson.hour ? 0 : dateTimeObjectJson.minute;\r\n            dateTimeObjectJson.second = !dateTimeObjectJson.second ? 0 : dateTimeObjectJson.second;\r\n            var $this = $(this),\r\n                setting = getSetting2($this);\r\n            setting.selectedDate = getDateTime2(dateTimeObjectJson);\r\n            setSetting2($this, setting);\r\n            setSelectedData(setting);\r\n        },\r\n        hide: function () {\r\n            hidePopover($(this));\r\n        },\r\n        show: function () {\r\n            var $this = $(this),\r\n                setting = getSetting2($this);\r\n            $(this).trigger(setting.trigger);\r\n        },\r\n        disable: function (isDisable) {\r\n            var $this = $(this),\r\n                setting = getSetting2($this);\r\n            setting.disabled = isDisable;\r\n            setSetting2($this, setting);\r\n            if (isDisable) $this.attr('disabled', '');\r\n            else $this.removeAttr('disabled');\r\n        },\r\n        changeType: function (isGregorian, englishNumber) {\r\n            var $this = $(this),\r\n                setting = getSetting2($this);\r\n            hidePopover($this);\r\n            setting.isGregorian = isGregorian;\r\n            setting.englishNumber = englishNumber;\r\n            if (setting.isGregorian) setting.englishNumber = true;\r\n            setSetting2($this, setting);\r\n            setSelectedData(setting);\r\n        }\r\n    };\r\n\r\n    $.fn.MdPersianDateTimePicker = function (method) {\r\n        if (methods[method]) {\r\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\r\n        } else if (typeof method === 'object' || !method) {\r\n            return methods.init.apply(this, arguments);\r\n        } else {\r\n            $.error('Method ' + method + ' does not exist in jquery.Bootstrap-PersianDateTimePicker');\r\n            return false;\r\n        }\r\n    };\r\n\r\n})(jQuery);"],"sourceRoot":""}